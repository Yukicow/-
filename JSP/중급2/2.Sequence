




Oralce에서 Sequence는 일정하게 증가하는 숫자를 만들어 줄 때 사용한다.

이 값은 시퀀스이름.NEXTVAL 을 실행할 때에만 지정한 값만큼씩 증가한다.

Primary Key로 지정된 데이터에만 이 값을 넣을 수 있다.

한 번 올라간 값은 절대 내릴 수 없기 때문에 Primary Key의 특성도 유지할 수 있다.


시퀀스이름.CURVAL라고 해서 현재 시퀀스값이 몇인 지 불러오는 것도 있는데

이 문법은 시퀀스값이 담긴 컬럼이 있는 테이블에서만 사용할 수 있다.

한 번 사용했다가 그 값을 지워서 테이블에 시퀀스 값이 쓰인 컬럼이 존재하지 않는 경우도 저 문법을 사용할 수 없다.


어려운 내용은 아니니 예시를 보도록 하자.


먼저 Sequence를 만들어 주어야 하는데 Table을 만드는 것과 비슷하다.

하지만 지정해 줄 것들이 있다. 지정하지 않고 단순히 'Create Sequence 시퀀스명' 을 쓰면

default 값들도 시퀀스가 만들어진다. 


CREATE SEQUENCE test_seq(시퀀스명)
       INCREMENT BY -1
       START WITH 1000
       MINVALUE 1
       MAXVALUE 1000
       NOCYCLE or CYCLE
       NOCACHE or CACHE 숫자
       NOORDER or ORDER
;

지정 가능한 것들은 위의 것들 정도만 알면된다.


INCREMENT BY : 시퀀스 실행 시 증가시킬 값 (음수를 넣으면 감소됨)

START WITH : 시퀀스의 시작값이다. 

# 시퀀스가 증가하는 값이라면 MINVALUE과 같거나 커야 하고 감소하는 값이라면 MAXVALUE와 같거나 작아야 한다. 

MINVALUE : 시퀀스의 최솟값이다.

MAXVALUE : 시퀀스의 최댓값이다.

NOCYCLE | CYCLE : NOCYCLE(반복 안 함), CYCLE(시퀀스의 최댓값 또는 최솟값에 도달 시 최솟값(최댓값)부터 다시 시작)

NOCACHE | CACHE : NOCACHE(사용 안 함), CACHE(캐시를 사용하여 미리 값을 할당해 놓아서 속도가 빠르며, 동시 사용자가 많을 경우 유리)

# 설정을 안 하면 기본 default로 20이 들어간다.

NOORDER | ORDER : NOORDER(사용 안 함), ORDER(요청 순서로 값을 생성하여 발생 순서를 보장하지만 조금의 시스템 부하가 있음)

RAC환경에서는 이 걸 꼭 사용해야 한다고 하는데 RAC이 뭐냐면 DB서버의 장애를 대비해서 DB서버를 2대 이상 설치하는 것을 말한다.

이 때 두 대의 데이터베이스의 데이터는 항상 서로 같도록 유지해야 한다. 

ORDER는 이런 RAC환경에서 시퀀스의 순서를 보장해 준다. ORDER 옵션을 사용하면 시작값을 무시하는 듯 하다.



이렇게 시퀀스를 만들고 나면 

이제 우리가 설정한 값부터 시작해서 시퀀스명.NEXTVAL를 실행할 때마다 그 값이 설정한 값만큼 증가한다.

그 값을 우리는 컬럼을 추가하거나 수정할 때 컬럼의 속성값으로 넣어줄 수도 있고 조회를 할 수도 있다.

# select를 통해 시퀀스명.NEXTVAL로 다음 시퀀스 값을 조회하면 조회함과 동시에 값도 오르니 조심하자.


예를 들어 insert into test (id) values(test_seq.NEXTVAL) 라고 하면 

test 테이블에 id속성을 갖는 컬럼이 생기는데 id의 속성값으로 test_seq의 다음 시퀀스 값이 들어간다.

만약 시퀀스 시작값을 0으로 설정해 두었다면 다음 값은 1이기 때문에 1이 들어갈 것이다.


시퀀스는 다른 테이블에서도 사용이 가능한데 만약 그 테이블에서만 고유하게 사용하고 싶다면

다른 테이블에서 사용할 시퀀스와 확실하게 구분하여 사용하자.



시퀀스를 수정하는 방법은 alter를 이용한다.

'ALTER SEQUENCE test_seq 수정할 항목' 의 형태로 사용하면 된다.


삭제는 DROP을 이용한다 'DROP SEQUENCE test_seq'의 형태로 사용하면 된다.