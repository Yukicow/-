






Servlet을 공부할 때 살짝 request와 response 객체에 대해 알아 보았다.

JSP도 결국은 Servlet으로 변환될 파일이기 때문에 JSP에 적어 주는 코드도 Servlet에 적는 것과 똑같다.

예를 들면 Servlet에서 사용한 request.getParameter()과 같은 메소드를 사용할 수 있다.

request 객체를 통해 정보를 받아 그것들을 이용한 기능,로직을 넣는 것이다.


그런데 JSP에 Servlet이랑 똑같이 코드를 작성하는데 왜 동작하죠? request 객체랑 response객체도 안 만들었는데.

라고 한다면 잘 살펴 보면 말이 된다.

JSP파일은 결국 Servlet 파일로 변환될 것이다. 변환되어 JSP파일의 java 코드들이 Servlet으로 변환될 때 

모두 메소드로 옮겨지면 사실상 Servlet에 바로 코드를 작성한 것과 뭐가 다른가? 그냥 Servlet이랑 똑같다.

Servlet으로 변환되고 나면 Servlet을 통해 웹 앱이 실행되는 것과 똑같은 원리로 WAS가 자신이 받은 요청 정보를 토대로 request객체를 만들고

그것을 Servlet 객체의 인자로 넘긴다. 그럼 request 객체를 받은 Servlet파일에 의해 만들어진 객체는 요청에 맞게 자신의 로직을 수행할 것이다.

그러니 JSP에 아직 생성되지 않은 객체를 사용해도 문제가 없는 것이다. 어차피 나중에 Servlet으로 변환되고 다 받을 것들이니까.

그냥 Servlet에 코드를 작성한다고 생각하면 된다.


response객체도 request객체처럼 사용해 주면 된다.

response객체에서 가장 많이 사용하게 될 메소드는 아마도 response.sendRedirect() 메소드이다.

()안에 jsp파일 또는 html파일 등등 클라이언트에게 보여지게 될 웹 페이지를 넘기는 것이다.

이것은 클라이언트를 아예 새로운 페이지로 넘기는 기능이기 때문에 새로운 요청으로 인식한다.

그러니 당연히 기존에 받았던 request에 대한 정보는 없어지고 새로 생겨난다.


이 메소드를 사용할 때에 조심할 것이 하나 있다. 바로 response.sendRedirect()메소드로 새로운 웹페이지로 이동해도

밑의 다른 로직이 수행을 안 하는 것이 아니다. JSP파일에 있는 다른 로직도 당연히 수행이 지속된다는 것이다.

sendRedirect() 메소드가 하는 일은 웹브라우저에 전송되는 헤더 정보에 어느 페이지로 리다이렉트하라는 정보는 넣는 것 뿐이지 

실제로 JSP 프로그램의 흐름을 변경하는 것은 아니기 때문이다.

그래서 밑의 로직들을 수행하지 않게 하기 위해서는 확실하게 JSP를 마무리하는 로직을 짜야 한다.

else를 이용하거나 response.sendRedirect() 메소드 호출 이후 JSP를 마무리 하는 메소드를 넣어도 될 것 같다.


그리고 response.sendRedirect() 메소드를 사용할 때 보면 () 안에 웹 페이지 파일만 써 주는 것이 아니고 

'?'로 구분해서 parameter를 넣기도 한다. 

이것은 자신이 받은 인자를 다른 페이지로 넘어갈 때 같이 넘겨 주기 위해 사용하는 것인데

'?'뒤에 인자로 넘어온 속성의 name을 적어 주고 '=' + '값' 을 넣어 주면 된다.

위에서 말했듯이 페이지가 바뀌면 새 요청으로 받아들여서 기존의 request 객체 또한 없어진다.

그래서 페이지를 넘길 때 꼭 같이 넘겨야 할 인자가 있다면 url에 같이 적어 넘기는 것이다.

doGet 방식은 url에 데이터를 담아 전송한다고 했는데 원래 이런 식으로 넘기는 듯 하다. 그걸 직접 적어서 전달하는 것 뿐이고


예를 들어 test1.jsp 파일에서 id라는 인자를 확인하고 값이 일치하면 클라이언트에게 test2.jsp페이지로 넘기는 로직이 있다고 해 보자.

test2.jsp에서 굳이 id에 대한 인자를 필요로 하지 않으면 모르겠는데 혹시 그 id인자를 가지고 응용하는 로직이 있다면 필요할 것이다.

그래서 test1.jsp는 자신이 받은 id 인자의 값이 조건에 맞는 지 확인하고 맞았을 때 test2.jsp로 넘기는 

response.sendRedirect()에 이렇게 적어 주었다. response.sendRedirect("test2.jsp?id=" + ID)

id 인자의 value를 ID 변수에 저장하고 저렇게 적을 수도 있고 response.sendRedirect("test2.jsp?id=" + request.getParameter(id))

이런 식으로 사용할 수도 있겠다. 

아니면 직접 지정해서 넣어줄 수도 있는데 그건 id value를 알 지 않는 한 불가능하기 때문에

사실상 저렇게 하는 방법밖에는 없다. 아니면 id인자의 value와 상관 없이 id의 인자의 value를 직접 지정해서 넣고 싶을 때라면

response.sendRedirect("test2.jsp?id=10") 이런 식으로도 사용할 수 있겠다.


하여튼 '?'로 파일과 뒤에 인자로 넘길 값을 구분하여 url에 인자의 값을 담아 넘길 수 있다. 

인자가 여러개일 때에는 &를 통해 구분하여 여러개의 인자를 넘길 수 있다.

근데 왜 굳이 이렇게 하지? 그냥 넘어간 페이지 내에서 request.getParameter()를 쓰면 안 되나? 

위에서도 말했지만 페이지가 넘어가면 새로운 요청이고 새로운 스레드를 할당 받는다. 기존 요청에 대한 정보와는 분리된다. 

그래서 url에 담아 넘겨 주는 듯 하다. 



response객체에는 getWriter()라는 메소드가 있다.

이 것은 Servlet에서 HTML에 들어갈 내용을 직접 작성할 때 사용하는 Writer 객체를 반환하는 메소드이다.

기능의 수행을 마치면 요청에 대한 응답으로 HTML 파일을 넘겨야 하는데 

Servlet은 HTML에 들어갈 코드를 이 Writer를 통해 작성하는 것이다.

그리고 이 객체는 JSP에서도 사용할 수 있다. JSP파일에서 Writer를 이용해 HTML태그를 작성하면

그 작성된 문구가 응답으로 보내는 HTML 파일에 같이 적혀들어가기 때문에 그 문구가 실행된다.

조건문과 같은 것들과 같이 사용해서 특정 기능을 수행하게 할 수 있다.