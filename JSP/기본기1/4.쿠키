




쿠키란 

웹 브라우저에서 서버로 어떤 요청을 하면, 서버측에서는 알맞은 로직을 수행한 후 데이터를 웹 브라우저에 응답한다.

그리고 서버는 웹 브라우저와의 관계를 종료한다. 

서버측에서는 어떤 클라이언트가 어떤 요청을 했고 무엇을 수행했는 지 기억하지 않는다는 것이다.

이렇게 웹 브라우저에 응답 후 관계를 끊는 것은 http프로토콜의 특징이다.

연결이 끊겼을 때 어떤 정보를 지속적으로 유지하기 위한 수단으로 '쿠키'를 이용한다.


그래서 쿠키가 무엇이냐.

쿠키는 웹 서버측에 의해 만들어지는 작은 기록 정보 파일이다.

쿠키는 인터넷 사용자가 같은 웹사이트를 방문할 때마다 읽히고 수시로 새로운 정보가 업데이트 된다.


쿠키에 담긴 데이터가 웹 서버로 보내지면 그 정보를 토대로 쿠키 객체가 만들어 진다.

우리는 쿠키 객체의 여러 메소드를 통해 쿠키 값을 설정하거나 쿠키 데이터를 가져오는 등 다룰 수 있게 된다.

우리는 생성한 쿠키의 속성을 설정하고 클라이언트에게 다시 잘 돌려 주어야 한다.


기본 적인 쿠키 객체 생성하고 세팅하고 다시 보내는 메소드만 알아 보겠다.

나머지 쿠키 객체 관련 메소드는 따로 찾아 보고 사용하길 바란다.



1. new Cookie(String name, String value)

쿠키의 이름과 쿠키의 값을 지정해서 쿠키 객체를 만들 수 있다.


2. setMaxAge(시간(초단위))

쿠키객체.setMaxAge(시간) 의 형식으로 쿠키가 지속되는 시간을 세팅할 수 있다.

쿠키를 삭제할 때에는 이 메소드를 이용해서 setMaxAge(0) 시간을 0으로 세팅하면 쿠키가 삭제된다.

기본적으로 쿠키는 브라우저의 메모리에 저장되기 때문에 브라우저를 닫으면 함께 쿠키의 내용도 사라진다.

하지만 이 setMaxAge를 통해 시간을 설정할 경우 브라우저를 닫았다 켜도 유지될 수 있게 

클라이언트 컴퓨터의 특정 경로에 쿠키 데이터를 저장하고 일정 시간 동안 유지시키도록 한다.



3. response.addCookie(쿠키객체)

클라이언트에게 쿠키객체를 데이터를 넘기는 메소드이다.


4. setPath

쿠키의 url을 매핑한다. url과 매핑되는 요청이 있을 때만 해당 쿠키를 클라이언트로부터 넘겨받는다.

기본적으로는 쿠키를 다 받아서 불필요하게 쿠키를 쓸 일이 없는 요청에서도 쿠키가 다 전달되기 때문에

이 설정을 통해 원하는 요청에 대해서만 쿠키를 받도록 설정할 수 있다.

setPath("url패턴") 형태로 사용된다. url패턴을 우리가 사용하는 일반적인 url패턴과 비슷하다.

단, setPath에는 '*'를 사용하지 않는다. 만약 /test 의 하위의 모든 요청에 대해 설정하고 싶다면

setPath("/test/*")가 아닌 setPath("/test/") 이렇게 쓰면 된다.

이렇게 특정 url에만 데이터를 보내도록 하는 기능은 session과 application에는 없는 기능이다.
 


쿠키는 상대적으로 보안상 취약하다.

https://www.youtube.com/watch?v=LNTscUEgcnU&list=PLq8wAnVUcTFVOtENMsujSgtv2TOsMy8zd&index=33

각 데이터 저장형식에 대한 차이점과 어떤 경우에 무엇을 사용하는 지에 대한 내용


조금 쉽게 세션과 쿠키의 차이점을 정리하면 데이터를 서버와 클라이언트 누구에게 저장하느냐이다.

쿠키는 브라우저에게 데이터를 저장하게 하고 필요에 따라 그 데이터를 보내면 우리는 그에 맞는 작업을 처리하게 하는 거고

세션은 우리가 데이터를 저장하고 브라우저에게 쿠키로 그 데이터 저장공간에 대한 id값을 넘기면

id값을 받았을 때 그 스코프 내의 데이터를 사용할 수 있도록 해 주는 것이다.

하지만 여기서 주의할 점은 서버와 클라이언트의 차이이다.

클라이언트는 혼자이기 때문에 데이터를 몇 개 저장해도 큰 부담이 없다.

하지만 서버는 존나게 많은 사람들의 데이터를 아무리 ㅈ만큼씩이라도 따로 메모리 상에 저장한다면 무리가 온다.

그리고 데이터가 저장된 세션 공간에 대한 id값은 쿠키라서 브라우저를 닫으면 클라이언트 측에서는 쿠키값이 사라진다.

즉, 세션은 남아 있는데 그 쿠키를 가진 브라우저는 돌아올 일이 없는 경우가 허다하다는 것이다.

그래서 특정 데이터를 오래 저장할 일이 있으면 무조건 쿠키를 사용하는 것이 좋다.

세션은 잠시 서버가 데이터를 갖고 클라이언트와의 연결을 유지하기 위해 사용하는 게 아마 좋을 듯 하다. 