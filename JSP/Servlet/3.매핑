





서블릿 파일의 url 주소는 너무나도 길다.

이것을 우리가 원하는 이름으로 짧게 줄여서 사용할 수 있다면 좋을 것 같다.

우린 그걸 url 매핑이라고 부른다.


서블릿에서 url을 매핑하는 방법은 두 가지이다.

하나는 어노테이션을 이용하는 것이고 나머지 하나는 web.xml파일에 태그로 정의하는 것이다.



1. 어노테이션

어노테이션을 이용하는 방법은 서블릿의 Class파일에 Class선언부 바로 위에 정의해 주면 되는데

@WebServlet("")의 형태로 사용된다.

어노테이션 방식을 이용할 때에는 web.xml에 설정을 하나 해야 하는데

web-app 태그를 보면 맨 뒤 쪽에 metadata-complete 라는 속성이 있다. 그 녀석을 false로 지정해야 한다. 

이 속성은 xml파일에 메타데이터의 내용이 전부 들어가 있는 지에 대한 여부를 묻는 것이다. 

True는 설정에 대한 내용은 전부 xml에 있으니 굳이 다른 파일을 스캔해서 어노테이션을 확인할 필요가 없다는 것이고

false는 web-fragment.xml, WEB-INF의 classes(java)디렉토리의 class파일들과 WEB-INF의 lib디렉토리의 jar파일들을 확인해서

다른 설정이나 어노테이션이을 확인해 메타데이터에 대한 내용을 스캔하도록 하는 것이다.


()안에는 들어갈 수 있는 패턴은 디렉토리 패턴과 확장자 패턴이 있는데 자세한 것은

jsp -> 중급 -> 패턴에 정의해 두었으니 확인하자.



2. web.xml

web.xml 방법은 말 그대로 web.xml 파일에 태그를 통해 직접 지정하는 방식이다.

사용하는 태그는 <serlvet></serlvet>과 <servlet-mapping></servlet-mapping>이다.

먼저 <serlvet></serlvet>태그 안에는 지정할 클래스의 이름을 패키지를 포함하여 적어 주어야 한다.

<serlvet>
    <servlet-name>test</servlet-name>
    <serlvet-class>com.project.Test</serlvet-class>
</serlvet>

이런 식으로 패키지를 '.' 으로 구분하여 클래스 파일의 이름까지 적어 준다.

<serlvet-name></serlvet-name>은 우리가 태그에 흔히 사용하는 name과 같다.

앞으로 우리가 지정한 서블릿 파일에게 이름을 부여하는 것이다.

다른 태그에서 사용될 때 name을 통해 접근할 수 있다.

위처럼 name을 정해 주었다면 <servlet-mapping></servlet-mapping> 태그를 통해 매핑을 하면된다.


<serlvet-mapping>
    <servlet-name>test</servlet-name>
    <url-pattern>/test</url-pattern>
</serlvet-mapping>


<serlvet-name></serlvet-name>에 위에서 지정한 name을 적고 

<url-pattern></url-pattern>에 앞으로 사용할 패턴을 정해 주면 된다.

여기에도 '/'을 통한 디렉토리 패턴과 '*.'을 통한 확장자 패턴이 있다.




3. jsp의 매핑

jsp는 html파일에 코드를 쓰기 때문에 web-xml에 정의하는 식으로 사용한다.

사실 jsp도 servlet이 되기 때문에 그 파일에 가면 바꿀 수 있는 지는 모르겠다.

하지만 중요한 것은 우리가 서블릿 파일을 만들면 기본적으로 디렉토리 패턴형식으로 어노테이션으로 url이 자동 매핑되어 있다.

jsp도 서블릿 파일이 될 때 자동으로 어노테이션으로 url이 매핑돼서 우리가 url패턴을 직접 지정하는 일 외에는 

일반적으로 디렉토리 방식으로 지정된 그 매핑 url을 사용한다. 하지만 굳이 지정해 주고 싶다면

web.xml에서 위의 서블릿 파일 처럼 해 주면 되는데 차이점이 하나 있다.

jsp는 서블릿처럼 내부 파일이 아니고 외부 파일이기 때문에 패키지란 개념이 아니고 디렉토리라는 개념으로 구분된다.

그래서 특정 디렉토리에 파일이 들어가 있다면 '.'이 아닌 '/'으로 구분해 주어야 한다.

EX)

<serlvet>
    <servlet-name>test</servlet-name>
    <serlvet-class>com/project/Test</serlvet-class>
</serlvet>