



Servlet과 JSP의 차이


Servlet은 java코드에 html코드를 접목시켜서 동적 웹사이트를 만드는 방식이고

JSP는 html코드에 java코드를 접목시켜서 동적 웹사이트를 만드는 방식이다.


먼저 웹 브라우저(클라이언트)와 웹 서버가 서로 어떻게 상호작용하는 지 가볍게 알고 넘어가자

제대로 이해하고 정리한 것이 아니기 때문에 조금 틀린 내용도 있을 수 있음.


우리가 웹 페이지, 사이트를 만들면 그 사이트는 우리의 컴퓨터에 저장이 될 것이다.

웹 브라우저를 통해서 컴퓨터에 저장된 웹 페이지나 사이트를 여는 것은 문제가 없지만

만약 다른 컴퓨터에서 우리 컴퓨터에 저장된 웹 페이지를 열고 싶으면 어떻게 해야 할까?

우리 컴퓨터에 요청을 해서 파일 정보를 받아가 클라이언트의 컴퓨터 웹 브라우저에서 파일을 열어야 할 것이다.

하지만 컴퓨터와 컴퓨터 간의 데이터 교환은 컴퓨터가 딸랑 연결돼 있다고 되는 게 아니다.

클라이언트 컴퓨터가 요청을 하기 위해서 요청하는 프로그램도 필요할 것이고

페이지를 갖고 있는 컴퓨터 측에서도 그 요청이 들어왔다는 것을 인지하고 응답해야 할 프로그램이 필요할 것이다.

이 때 상호작용하는 것들이 바로 웹 브라우저와 웹 서버이다.


웹 서버는 웹 페이지나 사이트를 갖고 있는 컴퓨터 측의 응용 프로그램이다.

웹 서버는 클라이언트 측의 웹 브라우저가 우리의 웹 서버에 요청을 하면 요청 데이터가 넓은 네트워크 상에서

제대로 찾아올 수 있도록 위치를 알리는 역할을 하고 또 요청이 들어오면 요청이 왔다는 것을 인지하고 

요청에 대한 응답으로 그에 맞는 데이터를 다시 반환해 주는 역할을 한다.

여기서 ip는 각 컴퓨터에 찾아가기 위한 고유 번호같은 것이고, port는 컴퓨터 내에서도 

어떤 응용 프로그램에 데이터가 전달 되어야 할 지 모르기 때문에 그걸 구분하기 위한 번호이다.


하여튼 위와 같은 방식으로 네트워크 상에 연결된 각 독립적 장치들이 웹에 대한 데이터를 주고 받는데

만약에 웹 서버에서 주어야 할 데이터가 그냥 단순히 미리 만들어 놓은 정적인 페이지라면

요청을 받은대로 그 페이지를 넘겨 주기만 하면 될 것이다.

그러나 만약에 웹 사이트가 클라이언트의 요청에 맞게 특정 기능을 수행해야 하는 동적인 웹이라면

그냥 저런 식으로만 데이터를 주고 받아서는 안 될 것이다.


웹 서버와 웹 애플리케이션 서버라는 것이 있다. 웹 서버는 정적인 웹에 대한 데이터를 주고 받는데 사용되고

웹 애플리케이션 서버는 동적인 웹 데이터를 주고 받는데 사용되는 서버이다.

웹 애플리케이션이(웹 앱)라는 단어의 뜻만 봐도 이해가 될 것이다. 

웹 앱은 웹 브라우저에서 이용할 수 있는 응용 소프트웨어를 말한다.

즉, 컴퓨터에 앱을 따로 다운 받지 않고 웹 브라우저 내에서 그런 서비스 같은 것들을 이용할 수 있는 것이다.

# 아무 프로그램이나 웹 브라우저로 사용할 수 있다! 이게 아니고 웹에서 작동할 수 있도록 만든 프로그램

그런 웹 앱(동적인 웹페이지)을 만들 수 있도록 해 주는 도구가 JSP,Servlet이다.

JSP나 Servlet을 이용해서 클라이언트에게 요청이 들어왔을 때 JSP와 Servlet으로 작성된 로직 등을 수행하게 하는 것이다.


그럼 그런 웹 앱을 사용하려면 위의 정적인 페이지를 다루는 웹 서버만으로는 무리가 있을 것이다.

그래서 이런 동적인 웹을 다루기 위한 웹 서버, 웹 애플리케이션 서버가 나온 것이다.

웹 애플리케이션 서버는 웹 서버의 역할도 수행할 수 있지만 효율을 위해 보통 구분해서 사용한다.


하여튼 웹 애플리케이션 서버는 클라이언트의 요청이 들어오면 그에 맞는 처리를 한다.

JSP로 작성된 웹 앱은 웹 앱 서버에 의해 Servlet으로 변환되어 컴파일 되고 로직을 수행한다.


정적 웹을 다루는 것처럼 클라이언트 요청이 들어오면 일단 JSP나 Servlet 등으로 작성된 웹을 들고와서

파일을 실행시키고 요청을 집어넣어 그 요청에 대한 로직을 수행시키도록 하고 그에 맞게 반환된 웹을

다시 html 형식으로 클라이언트에게 전달하는 것이다.


JSP도 결국 Servlet으로 변환되기 때문에 Servlet이 어떻게 동작하는 지 좀 알아 보자.

Servlet은 요청이 들어오면 반환으로 html에 대한 코드를 Servlet 내부 코드에 하나하나 작성해서

보내는 형식으로 작동한다. 그렇기 때문에 좀 불편하다. 뭐 일단 그게 중요한 게 아니고

클라이언트 요청이 들어오면 웹 앱 서버는 Servlet을 컴파일 하여 프로그램을 실행하고 

요청으로 들어온 데이터를 프로그램에 전달하여 요청에 대한 로직을 수행 (데이터 베이스 등에 새롭게 데이터를 업데이트 하는 등)

그리고 로직이 끝나면 이제 업데이트된 데이터 등을 다시 클라이언트에게 보내주어야 하는데

그 때 데이터 베이스에서 업데이트 된 데이터를 가져오거나 Servlet으로 작성한 로직이 수행되는 방식을 통해

클라이언트에게 새롭게 보내져야 할 데이터를 수집, 그리고 출력 객체를 통해 html 코드를 일일히 작성해서 보내는 것이다.

즉, 출력객체를 통해 화면에 출력될 html 코드를 만들어 내야 한다는 것이다.


위의 과정이 일어나느 웬만하면 요청이 끊기는 일이 없기 때문에 Servlet으로 작성된 파일은 상시 돌아가는 중이라고 해도 되지 않을까.. 

하지만 각 멀티 스레드를 이용하여 작업하기 때문에 데이터가 충돌할 일은 없다. 아마 상시 돌아간다고는 하지만

이게 다 같은 프로세스라고 보기는 어렵다는 것이다. 각 요청마다 다른 스레드를 이용한 각각의 프로세스가 돌아가는 형식인 듯 하다.


뭐 좀 말이 복잡한데 Servlet을 가볍게 다뤄 보면 감을 잡을 것이다.

아주 살짝만 배울 것이기 때문에 빠르게 따라오자.




