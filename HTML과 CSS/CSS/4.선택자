


CSS의 선택자로는 여러 가지가 올 수 있다.

그 중에서 기본이 되는 클래스와 id에 대해 알아 보도록 하자.



1. 클래스 

클래스는 HTML에서 속성(attribute)을 부여하는 역할을 하는 녀석이다.

우리가 HTML에서 CSS와 연계해 특정 속성(property)을 부여해 주는데

이 때 선택자를 지정해 주고 선택자에 해당하는 모든 태그는 

CSS의 property를 부여 받는다.

하지만 태그만으로 선택자를 구분을 하면 원하지 않는 부분까지 영향이 갈 수 있다.

그런 것을 방지하기 위해 선택자에 올 수 있는 속성을 부여하는 class가 있다.


class는 attribute로 태그 안에 작성할 수 있다.

<태그 class = "클래스1 클래스2 클래스3">의 형태로 사용할 수 있다.

여러 가지의 클래스 속성을 부여할 수 있으며 띄어쓰기로 구분한다.

만약 클래스1이라는 속성을 부여했다면 클래스1 속성(attribute)을 갖는 모든 내용에

CSS를 통해 property를 부여할 수 있다. 


이 때 style에 선택자를 적을 때에는 태그에 대한 선택자를 적을 때와는 다르게 '.'을 붙여야 한다.

'.'을 통해 태그와 클래스를 구분하여 선택자로 지정하는 것이다.

중요한 것은 '.'이라는 것은 앞에 '*'가 생략된 것이다.

그래서 만약 특정 태그에 class="test" 라는 클래스를 부여했고 style로 

.test{
    ~~
}

이렇게 부여를 했다면 이것은 

*.test{
    ~~
}

와도 같은 것이 되는데 *는 '모든 것'이라는 의미를 뜻하므로

test 클래스를 부여 받은 모든 태그에 대해 스타일을 적용한다는 것이다.


만약 여러개의 태그에 test라는 클래스를 부여했는데 특정 태그의 test클래스에만 스타일을 다르게 부여하고 싶을 때에는

태그.test{

}

위와 같은 형태로 사용 가능하다.




2. id

class와 비슷한 것으로 id 라는 속성도 있다.

id 또한 선택자에 올 수 있는 속성인데 이 선택자에 우선 순위라는 것이 있다.

태그 < class < id 이다. 이게 무슨 말이냐.

우리가 CSS의 선택자로 같은 태그를 사용한다면 가장 나중에 정의된 속성이 최종적으로 부여 된다.

예시로 <a>태그에 color 속성을 부여한다고 하면 

a{
    color: red;
}

a{
    color: blue;
}


이 때 화면에 실제 출력되는 것은 blue가 될 것이다.

하지만 class를 이용해서 위의 코드를

클래스1{
    color: red;
}

a{
    color: blue;
}

이렇게 바꾼다면

클래스가 우선 순위를 갖기 때문에 클래스 속성을 갖는 내용은 red로 표현될 것이다.

이런 우선 순위가 id가 가장 높고 그 다음이 클래스 그리고 마지막이 태그이다.




3. 속성 선택자

속성 선택자는 특정 태그의 프로퍼티, 즉, 속성에 해당하는 값을 이용해서 지정하는 선택자이다.

일반적인 태그 선택자를 적은 다음 []를 추가하여 안에다가 속성값에 대한 연산자를 이용한다.
 
예를 들어 <a href="test.html"></a> 이라는 태그가 있을 때 이 태그를 선택자로 지정하기 위해서 

a[href="test.html"]{

}

이런 식으로도 선택자가 사용 가능하다는 것이다.

그렇게 많이 쓰이지는 않지만 혹시 모르니 이러한 연산이 있구나 하는 것 정도는 알 필요가 있다.


~= : '='와 같지만 값 안에 빈 공백을 구분자로 여러가지 value가 들어갈 수 있다.

ex) a[href~="test.html test2.html test3.html"]

|= : '-'을 기준으로 '-'의 앞 value와 일치하거나 value로 시작하는 값

^= : value에 지정된 값으로 시작하는 값

$= : value에 지정된 값으로 끝나는 값

*= : value가 포함되는 값

ex) a[href*="html" i] -> i는 대소문자를 구분하지 않는다는 의미, s를 사용하면 소대문자 구분





그럼 이제 우선순위에 대한 얘기가 필요할 것 같다.

위에서도 잠깐 언급했듯이 스타일의 선택자에는 우선순위가 존재한다.

상식적인 선에서 통하는 우선순위인데, 구체적이고 폭이 좁을 수록 우선순위가 높다.

그렇기 때문에 당연히 id > class > 태그 의 순으로 우선순위를 가진다.


그럼 속성 선택자나 뒤에서 배울 콤비네이션 연산자를 포함할 경우에는 우선순위가 어떻게 될까?

id > class > 태그 에서 속성 선택자를 포함할 경우 class와 태그 간에는 우선순위가 바뀔 수 있다

id > 태그[] > class > 태그 라는 것이다.


그럼 콤비네이션 연산자는 어떨까?

콤비네이션 연산자는 id 보다 한 단계 낮은 우선순위를 갖는다.

id > 콤비네이션 연산자 사용 > 태그[] > class > 태그