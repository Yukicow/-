






FrontController가 요청을 처리할 수 있는 Controller를 어떻게 찾을까?

이번에는 그 과정에 대한 얘기를 할 것이다.


FrontController는 HandlerMapping 객체들을 사용한다.

(Handler란 쉽게 그냥 Controller의 다른 호칭이라고 보면 된다.)

이 객체들은 Controller를 찾을 수 있도록 도와 준다.


Controller에도 종류가 여러 가지가 있다.

일단 Bean으로 등록된 일반 빈 객체들은 모두 Controller가 될 수 있다.

예를 들어 @Controller를 사용해서 만들어진 빈, Controller인터페이스를 구현하고 Bean으로 등록된 객체 등등

빈으로 등록된 객체면 일단 모두 Controller가 될 수 있는 녀석들이다.

그럼 이 중에 어떤 녀석이 사용되어야 하는 지가 등록된 HandlerMapping 객체들의 우선순위에 의해 정해진다.

HandlerMapping객체들은 각자 우선순위가 있다. 

그래서 그 우선순위에 따라 위처럼 여러 형태로 구현된 객체들을 하나씩 일치하는 것을 찾아낸다.

빈의 이름과 요청의 url이 같은 녀석을 선택하는 HandlerMapping, 

@RequestMapping이 사용된 빈 중 url과 일치하는 녀석을 선택하는 HandlerMapping 등 종류가 여러 가지이다.

우선순위에 따라 하나씩 HandlerMapping이 Controller로서 사용될 수 있는 녀석을 찾고 찾으면 그 Handler를 호출해서 사용하게 된다.


하지만 이 때 단순히 FrontController가 HandlerMapping객체가 찾은 Handler를 바로 사용하는 것은 아니다.

이유야 여러 가지가 있다. 먼저, 위에서 보면 알겠지만 컨트롤러의 종류가 여러 가지가 있기 때문에 

FrontController가 바로 Controller를 호출해서 사용하면 제한 사항이 너무 많기 때문이다.

컨트롤러인 줄 알고 사용하려 했더니, 사실 컨트롤러가 아니었다든가..

모든 컨트롤러가 ModelAndView를 반환하도록 밖에 만들지 못한다든가.. 등등 문제가 발생할 수 있고

이러한 문제를 FrontController에서 전부 처리하는 것은 FrontController의 역할에서 조금 벗어나고 과한 작업이다.

그래서 FrontController는 HandlerAdapter라는 객체를 이용해서 Controller를 대신 호출하고 수행한 결과를 반환하여 받기만 한다.



HandlerAdapter에 대한 내용은 다음 장에 설명한다.



