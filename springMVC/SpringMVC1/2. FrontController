






FrontController는 사실 크게 어려울 건 없다.

FrontController는 결국 요청을 받아서 여러 가지 기능들을 수행하기 위해 만들어진 객체들을 이용해

최종적으로 View를 생성하고 보내는 역할을 하는 녀석이라고 볼 수 있다.

쉽게 생각해서 요청을 처리하는 과정에서 필요한 여러 과정과 기능이 있을텐데, 이것들이 뭔가의 규칙없이

막 엮여서 단순히 기능만 수행하고 최종적으로 View를 완성하기만 한다면.

결과론적으로 보면 문제는 없을 지 모르지만, 그 과정을 만들고, 다듬고, 이해하는 과정이 상당이 복잡해질 것이다.

그래서 FrontController라는 것을 만들어서 정해진 수행 단계에 따라 요청처리를 관할하도록 한 것이라고 볼 수 있다.


그래서 FrontController는 일단 모든 요청을 자신이 받고, 그 다음에 각각의 객체들에게 요청 처리를 위한 로직을 수행하도록 한다. 

객체들이 수행을 하고 나온 결과를 FrontController가 다시 받아서 View를 처리해 내는 것이다.


FrontController는 자신이 모든 요청을 받기 때문에 FrontController도 결국은 Servlet에 포함된다.

스프링에서는 HttpServlet을 상속받아 만들어진 DispatcherServlet이 FrontController이다.

FrontController가 servlet으로서의 역할을 하게 되고, 나머지 요청 처리를 담당하는 녀석들은 

Servlet의 역할(라이브러리의 의존성)에서 벗어나 순수한 java코드로 작성한다고 볼 수 있다.


이러한 FrontController를 직접 만들어서 사용해도 되겠지만 이걸 Spring이라는 프레임워크를 사용하면

기본적으로 제공해 주기 때문에 그걸 사용하면 된다.


FrontController의 동작 과정을 아주 간단하게 설명해 보면 

요청이 오면 FrontController에서 요청을 받고 그 요청을 처리할 수 있는 Controller를 호출

Controller에서 로직을 수행하고 나온 ModelAndView객체를 받아서 그 값을 토대로 View를 생성하거나 생성하는 객체에게 요청을 위임한다.

이게 기본적인 동작 과정이고 이 내부적으로 세세한 주요 과정들이 더 담겨 있다.

그 과정을 우리는 앞으로 자세하게 알아볼 것이다.




