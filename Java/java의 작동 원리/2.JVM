





1. JVM


직역하면 '자바를 실행하기 위한 가상 기계(컴퓨터)'라고 할 수 있다. 

Java 는 OS에 종속적이지 않다는 특징을 가지고 있다.


java는 java로 만든 프로그램이 os에 종속받지 않게 하기 위해 프로그램을 하나 만들었다.

프로그램은 만들어질 때 CPU와 운영체제(OS)에 종속된 기계어 코드로 변환 되어 다른 CPU와 OS에서 충돌이 발생한다. 

하지만 java는 그것을 방지하기 위한 프로그램을 만든 것이다. 그리고 그게 바로 JVM이다

JVM은 자바 코드가 운영체제나 CPU 등 플랫폼에 상관없이 JVM만 있으면 어떤 컴퓨터에서든 동일하게 실행되도록 해 주는 것이다.





2. JVM의 원리


JAVA가 지금까지 특정 OS에 독립적(어떤 운영체제에서든 잘 녹아들 수 있는)인 이유가 JVM에 있다. 



일단 왜 언어들이 플랫폼(하드웨어(cpu)와 운영체제(OS))에 종속적인가.

cpu에 따라서 아키텍쳐가 다르고 os마다 api와 실행파일 형식이 다르다.

그래서 파일을 실행하기 위해서는 파일을 만든 환경과 같은 환경에서만 실행할 수 있다.

하지만 java는 JVM을 통해 이 한계를 극복했다.




1. 하드웨어


하드웨어 아키텍처마다 사용하는 기계어 종류가 다름. ex) 인텔 CPU와 AMD CPU는 사용하는 기계어가 다름.

그런데 실행코드는 기계어로 되어 있음. 기계(CPU)에게 일을 시켜야 하는데 CPU는 기계어 밖에 못 알아들으니까.



2. 운영체제

운영체제가 사용하는 API 형식이 다름.


API(Application Programming Interface)란? 

응용프로그램이 운영체제의 기능을 사용하고 싶을 때(운영체제에게 일을 시키고 싶을 때) 프로그래밍 언어를 통해서 

운영체제에게 특정 기능을 요청할 수 있는 함수라고 할 수 있음.


API에도 종류가 있다.

이해를 돕기 위해 조금 예시를 들자면 op.gg 알지? 그 op.gg가 어떻게 사용자 정보나 플레이 정보를 알고 쓰는 걸까.

바로 이 때 쓰는 게 API이다. 롤에게 사용자 정보와 플레이 정보를 API를 이용해서 요청(request)하면

롤은 그 정보를 응답(response)으로 전달해 준다. 이렇게 API는 응용 프로그램 간의 대화 방식이다.

롤에서 제공하는 API를 통해 op.gg 제작자는 사용자 정보와 플레이 정보를 받아 오고

그 정보를 바탕으로 사이트(프론트)를 구축하는 것이다.

상호작용 하는 관계에 따라 API의 종류가 나뉘는 것이다.

기상청과 날씨 정보를 제공하는 홈페이지간의 API는 http API가 될 것이다.


위의 원리대로 응용프로그램도 운영체제가 제공하는 API 함수를 이용해서 간접적으로 하드웨어에 접근할 수 있는 것이다. 

하드웨어를 직접 제어할 수 있는 것은 운영체제 뿐이기 때문이다.

모든 프로그램과 메모리 관리는 운영체제가 관리하기 때문에 프로그램은 하드웨어와 직접 대화하는 게 아니고

운영체제와 API로 소통을 하고 그 요청을 운영체제가 받아들이고 하드웨어와 상호작용 하는 것이다.


만약 내가 만든 프로그램이 내 컴퓨터 환경에서만 작용하는 API를 따른다면 다른 환경에서는 작동을 안 한다.

그래서 프로그램을 만들면 각 운영체제의 API를 따르는 버전을 각각 만들어야 한다는 것이다.


자바는 이런 문제를 JVM이라는 프로그램으로 극복한 것이다.

JVM은 어떻게 보면 java로 만든 프로그램이 어떤 환경에서든 잘 구동할 수 있게

기계어의 번역과 OS의 상호작용을 대신 담당해 주는 java입장에서는 하나의 대리 운영체제라고도 볼 수 있다.

자신이 사용하고 있는 환경에 맞게 최적화된 JVM을 다운 받으면 그 환경에 맞게 java 프로그램을 구동시켜 주는 것이다.

그래서 JVM 프로그램 자체는 플랫폼에 종속적이라고 할 수 있지만. 

그 프로그램만 하나 있으면 java로 만든어떤 프로그램이든 플랫폼 독립적이 되는 것이다.


이 JVM이라는 것은 그래픽 카드와 비슷하다.

oracle(자바 개발 회사)이라는 회사는 JVM의 스펙과 표준을 정의하면 공급업체가 그 것을 참고해서 

자신들의 하드웨어나 OS에 맞게 JVM을 만들어 공급한다.


물론 그렇지 않은 것들에 대해서는 oracle이 직접 만들어 배포하는 것 같다.

이런 특성 덕분에 JVM만 있으면 어떤 환경에서든 java파일이 잘 돌아갈 수 있는 것이다.




