





1. 스트림


스트림은 데이터의 흐름을 말한다.

이해를 돕기 위해 먼저 스트림과 파일의 기본적인 차이부터 집고 넘어가자.


파일은 mp3 처럼 4분 30초짜리 음원 데이터 전체가 기록되어 있다.

따라서 고정되어 있는 크기의 데이터를 처음부터 끝까지 읽어서 처리할 수 있다.

# 이미 데이터들이 저장돼 있기 때문에 읽기만 하면 됨.


하지만 스트림은 파일과는 다르다.

스트림이란 계속해서 흘러 들어오는 데이터를 의미한다.
 
즉, 마이크에 대고 하는 이야기나, 비디오 카메라로 찍는 동영상 처럼

입력장치를 통해 계속해서 들어오는 데이터의 흐름을 의미한다.

따라서 실제 데이터가 입력되기 전에는 어떤 데이터가 들어올지 알 수 없으며,

실시간으로 들어오는 데이터를 그때 그때 읽고 처리해야 한다.
 
혹은 유튜브 처럼 대용량의 데이터를 서버를 통해 받아서 재생하는 동영상의 경우,

데이터를 모두 다운로드 받아서 재생하려면 긴 딜레이가 발생하게 된다.
 
이를 막기 위해서는 먼저 들어오는 데이터부터 조금씩 메모리의 임시공간에 저장하여 재생시켜 주어야 한다.




2. 버퍼


버퍼는 일반적으로는 스트림 데이터를 조금씩 읽고, 저장하고, 처리하고, 비우기를 반복하는 메모리 공간이다.

이런 행위를 버퍼링이라고 하며, 임시로 데이터를 저장하는 메모리 공간 혹은 데이터 자체를 버퍼라고 한다.

(일반적으로 RAM메모리의 일부공간이 버퍼를 위해 사용된다.)

즉, Buffer란 특정 용도로 활용하기 위해 임시로 저장하는 Binary 형태의 데이터 저장 객체이다.


예를 들어 "0 1 2 3 ... 99"라는 동영상 데이터가 스트리밍 된다면,

0부터 1, 2, 3 의 순서로 데이터들이 흘러 들어올 것이다.
 
컴퓨터가 데이터를 처리하려면 일단 메모리에 올려두어야 한다.

메모리에 올라온 데이터만 CPU가 읽어서 처리할 수 있기 때문이다.
 
컴퓨터는 이 데이터들을 chunk(데이터를 처리하는 임의의 크기) 단위로 쪼개서 

임시 공간(메모리: RAM의 일부 영역)에 저장해두고 처리를 시작한다.

그리고 처리가 완료되면 임시 공간을 비우고, 다음 데이터가 들어오길 기다린다.
 
즉, 한번에 10개씩(=chunk) 처리하기로 정했다면, 

먼저 0~9까지를 10개를 입력받아 메모리에 저장하고, 동영상 형식으로 변환시켜 비디오 플레이어로 재생하고 메모리를 비운다.

0~9의 데이터가 동영상으로 재생되고 있는 동안 그 다음 10~19 까지를 입력 받아 메모리에 저장하고 처리하고 또 비운다.
 
스트림은 이런 식으로 데이터를 chunk 단위로 임시공간(메모리)에 저장하고, 처리하고, 비우기를 반복한다.

이렇게 하면 어머어마하게 큰 데이터도 조금씩 조금씩 처리할 수 있는 매커니즘이 완성된다.

이게 바로 컴퓨터가 스트림을 처리하는 방식이다.
 
유튜브와 같은 동영상 스트리밍 서비스가 이런 원리로 작동한다고 볼 수 있다.


스트림을 위해 데이터를 저장해두는 임시공간이 바로 버퍼(buffer)이고, 버퍼가 작동하는 방식을 버퍼링(buffering)이라고 한다.

따라서 버퍼의 크기는 chunk(데이터 처리 단위)와 같은 수준으로 설정되는게 일반적이다.


스트림은 물레방아가 돌아가는 원리와 비슷하다고 생각하면 된다.



ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ


개인적인 생각인데 파일과 스트림은 애초에 다른 개념이 아닐까 싶다.

스트림은 데이터의 흐름이고 파일은 메모리 상 어딘가에 저장된 데이터이다.

하지만 그런 메모리 어딘가의 저장된 데이터도 우리가 파일을 실행하면 스트림이 되어

여러 처리과정을 거치는 것은 똑같은 게 아닌가 싶다.

한 마디로 파일과 스트림의 차이라기 보다는 '파일은 스트림의 구동방식이 조금 다르다'가 맞는 것 같다.


우리가 어딘가의 서버로부터 영상이나 음악의 데이터를 받아 실시간으로 듣는 것은

스트리밍을 통해 데이터가 실시간으로 전송되고 버퍼에 일정량의 데이터가 쌓이면

우리에게 데이터가 보내지는 형식으로 이용하는 것이다.

이것은 데이터를 다운받는 속도,환경에 스트림의 속도가 결정되고 버퍼에 데이터가 쌓이게 된다.

문제가 생겨서 속도가 느려지면 버퍼에 일정량의 데이터가 쌓이지 못 하고 버퍼링에 걸릴 것이다.


하지만 파일은 이미 다운되어 있는, 즉 메모리 상에 존재하는 데이터를 바로 전달만 하면 되기 때문에

데이터를 바로 버퍼를 거칠 필요 없이 바로 보내기만 하면 된다.


파일은 이미 다운된 데이터이기 때문에 우리가 다운 받는 속도 등에 영향을 받지 않는다. 그래서 버퍼가 필요가 없다.

하지만 다른 스트리밍을 필요로 하는 것들은 파일이 우리 컴퓨터에 다운되는 개념이 아니기 때문에 일시적으로 메모리 상에 올라왔다가 지워진다.

그 일시적인 곳이 버퍼인 것이다. 설정해둔 버퍼의 크기에 따라 메모리 상에 데이터가 저장되고 우리에게 그대로 보여지는 것이다.


만약 스트림이라는 것이 내가 생각하는 하드웨어 상에서 흐르는 데이터의 흐름 자체를 의미하는 개념이 아니라면

위의 말이 틀릴 수 있지만 그 뜻이 맞다면 모든 컴퓨터 상에서 일어나는 데이터의 이동은 스트림이라고 볼 수 있는 게 아닐까.
