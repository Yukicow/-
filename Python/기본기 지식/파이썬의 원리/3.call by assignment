

call by assignment


call by value(값에 의한 호출) 와 call by reference(참조에 의한 호출)라는 개념이 있는데

말 그대로 값에 의한 호출은 함수가 호출될 때 인수에 대해 값을 복사해서 값만 넘기는 것이다.

#복사된 인자는 함수 안에서 지역적으로 사용되는 local value의 특성을 가진다.

'참조에 의한 호출'은 레퍼런스를 넘기는 거라고 볼 수 있다. 

그래서 '값에 의한 호출은' 함수 내에서 인수의 값이 변경돼도 값이 복사되어 전달됐기 때문에

본 객체에 영향을 안 미치지만 '참조에 의한 호출은' 레퍼런스 값이 전달 됐기 때문에

함수 내에서 변경된 값도 인자로 전달된 본 객체에도 영향을 받지.


파이썬에는 이 두 가지가 존재하지 않아.

대신 call by assignment라는 개념이 있는데

함수에서 인자로 받은 값에 따라 호출 방식을 다르게 적용하는 개념이야.

가변객체일 경우 가변객체가 함수의 인자로 넘어가면 '참조에 의한 호출'로 동작하고

불변객체일 경우 처음에는 '참조에 의한 호출'로 값을 전달한 뒤에

값이 변경되면 '값에 의한 호출'로 동작해. 정확히는 파이썬은 불변객체에 대해

값이 변경되면 그 값에 대한 정보를 다시 새 메모리에 할당한다고 했잖아?

그 원리임. '값에 의한 호출'로 불려가도 어차피 안에 있는 내용은 바뀔 일이 없어.

바뀐 값에 대해서는 어차피 새 메모리 공간을 할당할 거니까.

클래스 인스턴스의 self 알지? 이건 아마 가변객체 취급을 하기 때문에

'참조에 의한 호출'방식인 것 같아. 그래서 self로 레퍼런스 값을 받고 

그 안에서 값이 변경되거나 추가되어도 유지가 되는 거지.