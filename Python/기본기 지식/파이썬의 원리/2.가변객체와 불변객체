

가변객체와 불변객체




가변객체는 안에 있는 값이 변할 수 있는 거야. list, dict, set 등이 있지.

불변객체는 안에 있는 값이 변할 수 없는 거고 str, int, tuple 등이 있어.


불변객체가 값이 변할 수 없다는 개념은
 
파이썬의 기본 원리를 좀 봤다면 이해가 될 텐데.


불변객체를 이용해 어떤 새로운 값이 도출됐을 때 그 값에 대해서도 새롭게 메모리에 공간이 할당돼.

그래서 원래 있던 레퍼런스에 대한 데이터는 변하지 않는 거지. 변수가 가리키는 레퍼런스만 바뀔 뿐.


근데 이 원리는 불변객체 뿐만이 아니고 가변객체도 똑같아. 

데이터가 새로 생기고 변수가 그 레퍼런스를 가리키는 건 어디서든 똑같다는 거야.

그럼 가변객체는 왜 안에 있는 값이 변할 수 있다고 하는 걸까?


리스트를 예로 들어 보자.

내가 만약 a = [1,2,3]  리스트를 선언한다고 하면 이 리스트에 대한 레퍼런스가 생길 거야.

근데 여기서 안에 있는 값에 변화를 주면 어떻게 될까?

안에 있는 값들은 리스트 a의 메모리 공간에 같이 저장되는 것들이 아니야.

리스트 a = [] 가 생성이 되고 안에 있는 1,2,3은 각각 또 다른 레퍼런스 값을 가지는 고유의 객체들인 거지.

a = [1,2,3] 에서 a[0] 의 id 값과 b = 1 에서 b의 id값을 출력해보면 똑같은 값이 나올 거야.

한 마디로 a 안에 있는 값들은 각자 하나의 객체들인 거지.

그래서 얘네들도 고유의 레퍼런스 값을 가져.

결론은 리스트 안에 있는 값이 바뀌면 리스트 a = []에 대해서는 레퍼런스 값이 변하지 않지만

안에 있는 객체의 레퍼런스는 바뀌는 형태인 거지.

그래서 마치 a는 고정이고 메모리 안에 있는 데이터가 자유자재로 바뀔 수 있는 것처럼 보이는 것 뿐이고 

정확히는 안에 있는 객체들의 레퍼런스만 변경되고 있는 거야.

이제 이런 특징 때문에 나타나는 가변객체의 문제점이 있는데 이건 4번에 있는 얕은 복사와 깊은 복사 편을 보자






