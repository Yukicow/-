

메소드와 생성자



클래스 내에서 구현된 함수를 '메소드'라고 한다.

메소드 중에서 함수 이름이 __init__인 경우를 '생성자'라고 한다.


*중요) __init__ 의 역할

우리는 보통 함수를 직접 호출해야 하지만

__init__은 객체가 생성될 때 자동으로 호출되는 함수이다.

그래서 클래스에서 쓰일 인스턴스의 초기값을 설정할 때 쓰임.

만약 __init__ 이 아닌 다른 이름을 사용하면 이 함수를 바로 거쳐가지 않으니

인스턴스를 생성하는 과정과 초기 값을 지정하는 과정을 두 번에 걸쳐 나눠서 해야 함.

class pyshic_imform:
    def point(self, hegiht, weight, age):
    self.height = height
    self.weight = weight
    self.age = age

a = pyshic_inform()

위와 같이 인스턴스를 생성하고 인스턴스에 대한 초기값을 지정하기 위해 만들어진 메소드인
point라는 함수에 값을 넣어줘서 초기값을 설정해야 함.

a.point(height, weight, age)

그래야 클래스의 다른 함수에서 쓰일 값들이 정의가 됨.

하지만 __init__을 이용하면 인스턴스를 만듦과 동시에 초기값을 설정할 수 있음.

class pyshic_imform:
    pyshic_inform.__init__() #엄마함수.
    def __init__(self, hegiht, weight, age):
    self.height = height
    self.weight = weight
    self.age = age

a = pyshic_inform(height, weight, age)

이렇게.


그럼 초기값은 인스턴스가 만듦과 동시에 지정이 됐으니 바로 다른 메소드에서도 바로 써먹을 수 있음.



어떤 값을 응용하는 클래스가 아닌 경우 생성자를 이용하지 않을 때도 있음. #필요가 없으니 당연

ex)
class Singer:                   
     def sing(self):               
        print("Lalala~")
    
iu = Singer()                  
iu.sing()                       

