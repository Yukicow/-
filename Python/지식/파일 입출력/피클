

피클은 객체 저장 방법의 하나임.

파일 입출력은 텍스트 형태의 정보만 받고 불러냄.

pickle을 사용하면 리스트나 딕셔너리 등 여러 타입의 변수를 그 자체로 저장하고 쓸 수 있음.


사용법)

먼저 피클을 불러내야 함.

import pickle

파일 입출력과 비슷함.

profile = open("pickle_pickle", "wb") #w는 write를 b는 바이너리를 의미함.

바이너리는 이진법을 의미.

바이너리 파일은 이진법을 활용해 정보 자체를 불러내고 입력함.

텍스트 파일은 아스키 형식으로 파일을 불러내고 입력함.

아스키란 받은 디지털 정보를 지정된 규칙에 따라 문자 형식으로 해석하는 것.

따라서 숫자 100을 저장한다고 하면 텍스트 파일은 숫자 값을 저장하는 것이 아니라 

읽을 수 있는 문자 형태로 저장을 한다. 

바이너리 파일은 숫자 자체의 데이터를 이진법 형식으로 저장하는 것이다.


텍스트 파일은 데이터가 아니라 문서 파일로, 읽기 가능한 형식으로 작성하는 파일이고 

바이너리 파일은 데이터 형태 그대로 저장한다고 생각할 수 있다.


원하는 데이터를 pickle.dump(a, b)를 통해 추가할 수 있다.

a에 있는 정보를 b에 저장하라는 뜻


ex)

import pickle
yadong_file = open("profile.pickle", "wb") #입력할 때는 wb write 형식
yadong = ["오구라", "사쿠야", "키라라"]
pickle.dump(yadong, yadong_file)
yadong_file.close()

pickle.load()는 ()에서 데이터를 불러오라는 뜻
ex)
import pickle
yadong_file = open("profile.pickle", "rb") #불러올 때는 rb read 형식
yadongs = pickle.load(yadong_file)
print(yadongs)
yadong_file.close()
-> ['오구라', '사쿠야', '키라라']


예시를 이용한 부가 설명)

텍스트 파일과 피클 파일에 int = a 를 각각 저장했다고 치면

텍스트 파일은 정보를 불러냈을 때 텍스트 형식이기 때문에 

int = a 를 다시 사용하려면 그 텍스트를 현재 코드에 적어서 

int = a 로서 활용될 수 있게 다시 정의해야 함.

하지만 피클 파일에 저장된 int = a는 그 자체로 이미 정수 변수 a라는 정보를 

내포하고 있기 때문에 불러내자 마자 바로 사용 가능.