
1. abs() 절대값

2. max() 최대값 # 안에 있는 값중 가장 큰 것 출력.

3. min() 최소값 # 안에 있는 값중 가장 작은 것 출력.

4. round() 반올림 # 반올림 자세한 내용은 잡지식파일 참조.

5. sqrt() 제곱근 # math파일을 import 해줘야 함

5. pow(a, b) a를 b만큼 제곱 

#**와 차이점
**는 만일 저희가 기존 방식대로 3^65537을 한다면 3을 65537번 곱해야 하지만, 

3을 65537번 곱하는 대신 65537이 2^16+1인 것을 착안해서 계산 속도를 높일 수 있습니다.
3^2

(3^2)^2

(3^4)^2

(3^8)^2

식으로 하면 16번으로 하면 65536이 되는데, 여기에 *3을 하여 65537번을 만들수 있다.

결국 16+1번 즉 17번만 계산하면 3^65537을 구할 수가 있다.

*이해 돕기)

제곱에서 승은 다시 2의 몇승 식으로 나눠서 표현할 수 있는데

2가 아닌 다른 숫자로는 불가능

예를 들면

2^9는 2^8+1 -> ((2^2)2^2)x2로 표현 가능하지만 2^3^2로 표현 불가

이것은 2의 특징 때문인데 여기서 2승이라는 것은 숫자를 딱 한 번 제곱한다는 것이다.

3 부터는 같은 수를 두 번 이상 제곱하게 된다.

따라서 2의 몇 승 식으로 표현을 하면 한 번 제곱하고 나면 

그 제곱된 수를 다시 제곱하는 식으로 표현이 되지만 

3이상의 숫자는 기본 숫자를 여러 번 제곱하고 다시 제곱하는 형식으로 나타내 지기 때문에

숫자가 달라짐.

ex)

3^8 = 3^2^2^2 = 81 = (3^2)^2 x (3^2)^2

3^9 != 3^3^2

좀 더 이해를 돕자면 제곱근 2로는 표현이 가능한 게.

2는 한 번만 제곱되는 거고 2가 제곱근인 식으로 만들면 다른 식으로 표현을 바꿔도

모든 제곱근이 2이기 때문에 숫자에 대해 2의 제곱만이 다시 제곱되는 형식이라

형태가 바뀌어도 문제를 일으키지 않고 같은 값이 나옴.
