

함수


함수는 어떤 명령어를 미리 만들어 두고 사용할 수 있게 하는 것이다.


만들어 놓은 명령어에 대해 함수로 지정해주어 반복적으로 코드를 쓰지 않고

이용할 수 있게 하기 위한 것이다.


def 함수이름():             
    함수 내에서 실행될 것들

의 형태를 띈다.



함수를 사용하는 방법은 두 가지가 있다.

함수만 실행하거나.

실행한 함수에 대한 반환값을 변수에 저장하는 것이다.


함수만 실행하는 경우는 함수가 실행된 후에 값이 변화되지 않는 경우 많이 사용하고.

변수에 저장하는 경우는 함수가 실행되고 나온 반환값에 대해 저장해주기 위해 사용한다.


ex)



def a():
    print("good")

def b(num):
    num = num + num
    return num


함수 a의 경우 함수만 실행해도 good이 잘 출력된다.

하지만 b의 경우 함수가 실행되고 return을 통해 반환된 num이 저장될 곳이 없다.

따라서 result = b(num) 처럼 변수 선언과 함께 사용해야 한다.


레퍼런스 개념을 이해했다면 밑에 가 이해가 될 텐데.

함수가 실행될 때 불변객체와 가변객체가 있다.

불변객체로는 숫자형과(int,float) 문자형(str) 튜플,불리안,유니코드 가 있다.

가변객체로는 리스트,집합,사전 이 있다.

불변객체는 함수가 실행되고 나서 따로 그에 대한 return 으로 반환해주지 않으면

그 값이 변하지 않는다.

예시)

num = 1

def b(num):
    num = num + num

num.b()

print(num)

-> 1
    



ex)

def appn(lst1):
    lst1.append(1)

이런 함수의 경우 함수가 실행되면 받은 인수에 대해 append를 실행하는 명령어 이기 때문에

굳이 반환값을 필요로 하지 않는다.





