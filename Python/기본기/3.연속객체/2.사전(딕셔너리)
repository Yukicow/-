
사전


사전은 키와 밸류로 구성된 형태이다.

키가 밸류에 대한 데이터를 갖는 것

사전에서는 이미 지정된 키는 중복해서 사용될 수 없다.

사전은 중괄호를 이용한다.


예시)

cabinet = {1:"코미", "5A":"아미", "40-a":"애미"}

이런 식으로 키에 밸류를 지정해주는 것이다.

좀더 쉽게 생각하면 리스트에서는 [0],[1],[2] 이런 식으로 변수를 지정해줄 때마다

하나씩 늘어나던 키값을 직접 지정해 넣어주는 거라고 생각하면 편하다.

물론 위 처럼 키 이름도 마음대로 정할 수 있다.

저장된 값을 출력하는 방법은 리스트처럼 print(cabinet[키값])을 통해 출력하거나

print(cabinet.get(키값)) 으로 사전.get()을 통해 출력.

리스트에서 []를 통해 값을 출력할 때에는 키에 대한 데이터가 없으면 오류가 발생하는데 

사전에서도 마찬가지로 []로 출력을 하려 했을 때 데이터가 없으면 오류가 생긴다.

하지만 .get()을 통해 출력하면 오류가 아닌 None이 출력된다. 

그러니 웬만하면 get을 사용할 것.

print(키값 in 사전이름) 을 통해 사전에 키에 대한 데이터가 있는 지 출력해 볼 수 있다.



사전 함수.


1. 사전[키] = 변수  새로 추가 및 업데이트

cabinet[2] = 50
cabinet["5A"] = 100

-> {1:"코미", "5A":100, "40-a":"애미", 2:50}

새로운 키를 쓰면 새 키와 밸류가 생기고 

원래 있던 키에 새 정보를 입력하면 정보가 업데이트(바뀜) 된다.


2. del 사전[키] 키에 대한 정보 제거

del cabinet[1]

-> {"5A":"아미", "40-a":"애미"}


3. 사전.keys() 사전에 있는 키들만 출력.

print(cabinet.keys())

-> dict_keys(['1', '5A', '40-a']) # dict_keys는 그냥 함수 실행 후 값 출력되는 방식임


4. 사전.values()  사전에 있는 밸류만 출력

print(cabinet.values())

-> dict_values(['10', '아미', '애미'])


5. 사전.items()  사전에 있는 키 밸류 둘 다 출력

print(cabinet.items())

-> dict_items([('1','코미'), ('5A','100'), ('40-a','애미')])


6. 사전.clear() 사전에 있는 정보 삭제

cabinet.clear()

print(cabinet)

-> {}

