




이번에는 xml 설정에 대한 활용편이다.

배운 내용을 가지고 ArrayList를 xml로 만들어 볼 것이다.

몇 가지 안 배운 내용이 추가 되기도 하니 잘 보도록 하자.


일단 xml에서 ArrayList를 만들려면 bean 태그를 사용해 만들어야 한다.

ArrayList도 결국 클래스이기 때문에 객체로 만들어낼 수 있다.


<bean id="list" class="java.util.ArrayList" />

이렇게 하면 ArrayList 객체가 만들어졌다.


하지만 이게 끝이 아니다 안에다 값들도 넣어 볼 것이다.

ArrayList의 생성자 중에는 Collection을 인자로 받는 생성자가 있다.

이 생성자는 인자로 받은 Collection에 담긴 요소들을 값으로 갖는 ArrayList를 생성해 준다.

그래서 이걸 이용해서 빈을 만들어 줄 것이다.


<bean id="list" class="java.util.ArrayList">
    <constructor-arg>
        <list>
            <bean class="" />
            <ref bean=""/>
        </list>
    </constructor-arg>
</bean>


먼저 인자로 값을 넘겨야 하니 <constructor-arg>를 쓰고

그 안에 Collection 객체를 생성한다. 이 때 <list> 태그를 사용하면 된다.

그리고 그 태그 안에 평소 빈을 만들 듯이 새로 만들거나 원래 만들어 둔 빈을 넣을 수도 있다.

# 새로 생성하는 bean에는 굳이 id가 필요하지 않아서 넣지 않았다. 없어도 문제 없다.


그러면 그 객체들을 요소로 갖는 ArrayList Collection이 만들어지고 그 Collection이 다시 ArrayList 빈의 인자로 넘어간다.

그럼 ArrayList 빈 안에 있는 빈들을 요소로 갖는 ArrayList가 만들어 진다.


하지만 위의 방법은 조금 효율이 안 좋아 보인다.

그래서 직접 ArrayList를 만들 수 있는 기능도 있다.


하지만 이 기능도 처리기가 필요하다. xml파일의 namespace로 가서 util을 체크해 준다.

그러면 우리는 몇 가지 기능 사용이 가능해 지는데 

그 중 하나가 <uitl:list> 이다.

<uitl:list>는 위의 과정과 다르게 바로 그 안에 빈을 생성하면 그 빈들을 갖는 ArrayList가 생성된다.


<uitl:list id="" list-class="">
    <bean class="" />
    <ref bena=""/>
</uitl:list>

list-class 안에는 원하는 List Collection 종류를 사용하면 된다.



<list>와 <uitl:list>의 차이는 <list>는 beans 스키마에 정의된 <list> 요소이고

<uitl:list>는 java.util 스키마에 정의된 <list> 요소라는 것 같다.

하여튼 <list>는 그 자체로 List를 만들어 내는 건 안 되는 것 같고 빈 태그 안에 사용되는 듯 하다.



xml사용법은 오늘로 끝이다.

앞으로는 어노테이션을 통한 사용법을 알아 볼 것이다.

어노테이션 방식은 xml방식 보다 간편하고 조금 편리한 기술이다. 현재 트랜드라고 할 수 있다.

그렇다고 xml을 완전히 잊어서는 안 된다.

아직도 xml방식을 통해 사용하는 회사들도 많고 앞으로 그러는 곳이 있을 수도 있기 때문에 알아 놓고 있어야 나중에 편하다.

그리고 어노테이션을 공부할 때에도 xml방식을 이해하고 있으면 더 편리하다는 것을 느낄 수 있다.