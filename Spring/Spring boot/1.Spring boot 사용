






STS에 들어가서 Spring starter Project를 생성하면 Spring 부트를 기본적으로 사용 가능하다.

메이븐 또는 gradle 중 사용하는 것을 선택하고 패키지나 프로젝트명 등등 기입한다.

그러고 나서 다음을 누르면 여러가지 디펜던시를 넣을 수 있는데 기본적으로 

가장 밑에 있는 WEB의 Spring Web을 선택하고 나머지는 그때그때 추가하자

dev tool 정도는 나중에 하기 귀찮으니 넣어 주면 좋을 듯 하다. 

dev tool은 여러 기능을 제공하는 것 같은데 일단 추가해 놓으면 소스코드 변경시 자동으로 서버 재시작을 도와주니 추가하자.


그럼 이제 우리는 Spring boot를 사용할 준비가 되었다.

이렇게 만들어진 프로젝트는 따로 웹 컨테이너를 설정할 필요도 없고 설정파일에 대한 것도 

src/main/resource 에 있는 application.properties에서 모두 설정 가능하다.

Spring에 대한 라이브러리들을 기본적으로 내장했기 때문에 바로 Spring에서 제공하는 어노테이션을 따로 설정 없이 사용이 가능하다.

또 정적 파일들에 대한 디렉토리를 따로 보기 쉽게 만들어 두어서 거기에 정적파일을 넣으면 된다.

원래는 webapp의 WEB-INF안에 다가 static이라는 디렉토리를 따로 만들어서 보관했는데

이런 기능을 하는 home 디렉토리를 따로 구성해 놓은 것이다.

그래서 기본적으로 src -> main에 해당하는 곳 뿐만 아니라 static에 해당하는 위치까지 root가 되어

기본적으로 요청이 왔을 때 파일에 대한 검색하 기본 위치가 되는 것이다.



다음은 기본적으로 추가할 라이브러리가 하나 있는데 바로 jasper이다.

이 녀석은 jsp파일을 해석해서 서블릿으로 변환해 주는 tomcat의 jsp엔진이다.

우리가 많이 설정할 때 보던 jspServlet이 이에 해당한다.

이녀석이 없으면 jsp파일에 대한 요청을 할 때에 서블릿을 통한 뷰 페이지 반환이 아닌 jsp파일 다운로드가 돼버린다.

톰캣을 내장하면서 이녀석은 없나 보다.

하여튼 maven repository에서 다운받으면 된다. tomcat embed라고 치면 나올 것이다.



하지만 시간이 바빠서 기본적인 디펜던시를 빨리 추가하고 싶은 나를 위해 여기에 적어 보겠다.

이미 프로젝트를 만들었다면 프로젝트 우클릭 -> spring -> add starters에 들어가서 추가 가능하다.

web -> spring web

sql -> 사용하는 jdbc 라이브러리 

sql -> Mybatis Framwork

developer-tools -> spring boot devtools








