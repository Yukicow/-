






이번엔 설정파일 분리이다.

IoC 컨테이너, DispatcherServlet을 위한 xml파일을 여러개로 분리할 것이다.


분리하는 이유가 뭔가요?

프로젝트는 보통 여러 사람이 하게 된다.

근데 이 때 모두가 같은 하나의 설정파일을 사용하다 보면 문제가 발생할 수 있기 때문이다.

또 설정파일을 보면 알겠지만 하나의 설정 파일 안에 여러 가지 기능이 들어 있다.

DispatcherServlet이 참조하게 될 객체들에 대한 내용, Service 객체들의 DI를 위한 내용, 연결정보의 결합력을 낮추기 위한 내용 등등

서로 크게 연관이 없는 내용들이 하나에 모두 몰려 있다는 느낌이 조금 들 것이다.

이러한 설정파일을 각각의 특성에 맞게 분류한다는 것은 가독성의 증가면에서도 충분히 이득을 볼 수 있다.

물론 DispatcherServlet이 init 되는 순간에 컨테이너가 생성되기 때문에 위의 모든 설정 내용들은 DispatcherServlet에 의해 참조되어야 한다.



설정은 아주 간단하다.

일단 원래 xml 파일에 있는 내용을 각 특성에 맞게 분리한 여러 파일에 나눠서 넣고

프로젝트의 web.xml파일에 설정만 해 주면 된다.


    <listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/spring/service-context.xml
			/WEB-INF/spring/security-context.xml
		</param-value>
	</context-param>

	<servlet>
		<servlet-name>dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/분리한 설정파일 중 DispatcherServlet이 참고할 파일</param-value>
		</init-param>
        <load-on-startup>1</load-on-startup>
		<async-supported>true</async-supported>
	</servlet>

이렇게 설정해 주면 된다.

뭔가 복잡해 보이지만 사실 아무것도 아니다.


먼저 DispatcherServlet과 관련된 바뀐 설정부터 보면

DispatcherServlet이 참고하는 파일은 원래 위의

<param-value>/WEB-INF/spring/servlet-context.xml</param-value>

처럼 DispatcherServlet이 참고할 xml파일의 위치를 알려줘야 한다.

하지만 우리는 기본 양식을 지켜서 xml 파일을 작성했기 때문에 자동으로 이름과 매핑되는 xml을 찾아서 참고한 것이다.

이제는 xml 파일을 여러개로 분리했고 양식을 지키지 않는 상태로 변했으니 저렇게 위치를 알리는 설정을 넣어야 한다.




다음으로

<load-on-startup>1</load-on-startup>
<async-supported>true</async-supported>

이 있는데 <load-on-startup>1</load-on-startup>는 원래 서블릿은 처음 요청이 들어오면 그 때 생성이 된다.

하지만 이 태그를 사용하면 처음 서버가 시작될 때 서블릿 객체를 생성하도록 하는 것이다.

숫자는 순서이다. 서버가 시작될 때 생성하고 싶은 서블릿 객체가 여러개라면 그 순서를 정하는 것이다.

<async-supported>true</async-supported>는 동기식과 비동기식에 관련된 내용이다.

객체의 생성을 동기로 처리할 지 비동기로 처리할 지 정하는 것인데 true라고 하면 비동기 처리를 한다.

# 사실 이번 내용과 크게 관련된 것 같지는 않다.



이제 

<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/분리한 설정파일1
			/WEB-INF/분리한 설정파일2
		</param-value>
</context-param>

에 대해서 알아 보면


org.springframework.web.context.ContextLoaderListener는 톰캣이 시작되거나 끝날 때 등등

각각 어떠한 행위를 할 수 이벤트의 처리를 도와주는 녀석이다.

이번에는 톰캣이 시작되고 DispatcherServlet이 참조하게 될 xml 파일들을 추가로 설정한 것이다.

# 참고로 위의 <load-on-startup>1</load-on-startup>와 <async-supported>true</async-supported>가

# 리스너가 톰캣이 시작되고 참조하는 거라서 DispatcherServlet 톰캣이 시작되면 생성하게 하려고 넣은 건가 싶어서 빼고 실행해 봤는데 잘 작동했다.


위에서 DispatcherServlet 설정 중에 

<init-param>
	<param-name>contextConfigLocation</param-name>
	<param-value>/WEB-INF/분리한 설정파일 중 DispatcherServlet이 참고할 파일</param-value>
</init-param>

에서 <param-name>contextConfigLocation</param-name> 이 부분에 해당하는

contextConfigLocation을 가져가 똑같이 <param-name>태그에 작성했다.

즉, <param-name>contextConfigLocation</param-name>은 servlet-name과도 같다.

다른 곳에서 설정할 때 이름으로 사용할 수 있는 것이다.

contextConfigLocation라는 이름을 가져가 다른 곳에서 value를 설정할 수 있다는 것이다.

그래서 listener에서 contextConfigLocation를 사용해 참고하게 될 value를 설정했다.

이렇게 하면 끝이다.



근데 여기서 의문이 두 가지 생겼다.

첫 번째는 저렇게 param을 listener가 여러개 설정하면 

<init-param>
	<param-name>contextConfigLocation</param-name>
	<param-value>/WEB-INF/분리한 설정파일 중 DispatcherServlet이 참고할 파일</param-value>
</init-param>

여기에서 <param-value>/WEB-INF/분리한 설정파일 중 DispatcherServlet이 참고할 파일</param-value> 부분도

그냥 listener의 value에 설정하면 안 되나?

정답은 설정 가능하다. 이다.

<param-value>/WEB-INF/분리한 설정파일 중 DispatcherServlet이 참고할 파일</param-value> 

위의 value를 아예 없애버리고 <param-value></param-value> 이렇게 사용하면

아무 것도 참조하지 않는 상태가 된다. 그리고 원래 <param-value></param-value>에 들어갔어야 할 내용을

listener의 value에 넣으면 된다.

<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
            /WEB-INF/분리한 설정파일 중 DispatcherServlet이 참고할 파일
			/WEB-INF/spring/service-context.xml
			/WEB-INF/spring/security-context.xml
		</param-value>
</context-param>



두 번째 의문은 위에 listener는 value를 여러개 설정했는데

그냥 listener처럼 DispatcherServlet의 init param에 value를 한 번에 여러개 설정하면 안 되나?

정답은 가능하다. 이다.

위의 listener처럼 value에 그냥 여러개의 xml 파일 주소를 넣어서 


<init-param>
	<param-name>contextConfigLocation</param-name>
	<param-value>
        /WEB-INF/분리한 설정파일 중 DispatcherServlet이 참고할 파일
        /WEB-INF/spring/service-context.xml
		/WEB-INF/spring/security-context.xml
    </param-value>
</init-param>


위의 형태로 실험해 봤는데 잘만 됐다.

근데 왜 저렇게 안 쓰고 굳이 listener를 사용하는 지는 모르겠다. 나중에 물어 보자.