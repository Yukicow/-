






제약조건은 데이터베이스의 데이터들의 무결성을 지키기위해 입력받은 데이터에 대해 제한을 두는 것이다.

크게 도메인,엔티티,릴레이션 제약조건이 있다.



1. 도메인 제약조건

유효한 값의 범위에 대한 내용이다.

도메인 제약 조건은 데이터 단위의 제약조건이라고 할 수 있다.

올바른 데이터가 저장될 수 있도록 하는 제약 조건

데이터 타입과는 또 다른 내용이다.

NOT NULL, DEFAULT, CHECK이 있다.


NOT NULL

NULL값을 허용하지 않도록 하는 제약 조건

테이블 생성 시 데이터 타입 뒤에 'NOT NULL'을 붙임으로써 사용 가능


DEFAULT

값이 입력되지 않을 시 기본으로 들어가는 입력값을 지

테이블 생성 시 데이터 타입 뒤에 'DEFAULT 데이터' 붙여 지정 가능



CHECK

CHECK는 조건문과도 비슷하다.

어떠한 데이터 형태만을 받고 싶을 때 CHECK문을 통해 데이터에 대한 형식 조건을 달면

CHECK 조건에 만족하지 않는 데이터들을 넣으려 하면 오류가 발생한다.


EX) CREATE TABLE MEMBER (PHONE NVARCHAR2(50) CHECK(PHONE LIKE '010-____%-____'));

위의 경우 PHONE 속성에 대해서는 '010-____%-____' 형식을 지키는 데이터가 들어왔을 때만 유효하고 나머지는 오류를 발생시킨다.


뭐 위는 조금 문제가 있는 표현이니 정규식을 이용해서 더 좋게 표현하면

CREATE TABLE MEMBER (PHONE NVARCHAR2(50) CHECK(REGEXP_LIKE(PHONE, '^01\d-\d{3,4}-\d{4}$'));

위가 조금 더 올바른 표현이 될 것이다.





2. Entity 제약조건

Entity 제약조건은 레코드 단위의 제약조건이라고 할 수 있다.

테이블을 기준으로 봤을 때 레코드가 중복이 되지 않아야 하는 것처럼 레코드 단위의 무결성을 유지하는 제약조건이다.

Primary Key / Unique 가 있다.



Primary Key

레코드의 중복을 방지하는 속성을 지정하는 제약조건이다.


UNIQUE

속성의 속성값의 중복을 막는 제약 조건이다.



CREATE TABLE을 통해 테이블을 만들 때 데이터 타입 뒤에 적어줄 수도 있지만 마지막에 적어 주어도 된다.

마지막에 적어 줄 때에는 ()안에 속성을 지정해 주어야 하며 제약조건에 이름을 직접 부여할 때에는

앞에 'CONSTRAINT 제약조건 이름'을 넣어서 지정할 수도 있다.