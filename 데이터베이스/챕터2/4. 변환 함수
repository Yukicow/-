






1. TO_CHAR(NUMBER, 포맷)

숫자를 문자열로 변환해 주는 함수

포맷으로 작성된 형태에 맞춰서 변환해 준다.

포맷에 올 수 있는 특수문자와 숫자는 0, 9, ',', $, '.'이 올 수 있다.


9는 숫자의 자리를 나타내는 것이다. 당연히 입력되는 수보다 많거나 같아야 한다. 

만약 입력되는 값이 포맷에 지정된 자리보다 적은 수가 올 경우 빈 공간은 공백으로 채운다.

이럴 경우 TRIM함수를 이용해서 공백을 지우면 된다.

EX) TO_CHAR(1234, 99999) -> ' 1234'


0도 9와 똑같이 자리를 나타낼 때 사용한다. 하지만 0은 만약 입력되는 값이 포맷보다 작아 남는 공간이 있을 경우 0으로 채운다.

EX) TO_CHAR(1234, 00000) -> '01234'


0과 9를 섞어서 사용할 수도 있다.

EX) TO_CHAR(1234, 9900999) -> '  01234'

입력이 1234라서 포맷의 앞 990이 비게 되는데 9 부분은 공백으로 0부분은 0으로 채워진다. 


$는 앞에 $를 붙여준다. 어디에 넣어도 맨 앞에 붙는다.


','도 9의 사이에 붙일 수 있으며 출력될 때 그 위치에 ','를 붙여 준다. 아무대나 붙일 수 있다.


'.'는 소수점 구분이다. 소수점을 사용할 경우 입력되는 수도 소수점을 사용해 주면 그 값이 입력된다.

소수점이 없을 경우 0이 자동으로 들어간다.




2. TO_CHAR(DAT, 포맷)

날짜를 문자열로 바꿔 주는 함수


포맷으로는 년도는 Y, 월은 M, 일은 D, 시간은 HH 또는 HH24, 분은 MI, 초는 SS이다.

다른 표현 방법도 있지만 위가 보편적으로 쓰인다. Y,M,D는 원하는 개수만 써도 되지만 HH,MI,SS는 이렇게만 써야한다.

날짜의 구분자로는 원하는 특수문자를 사용할 수 있다.



3. TO_DATE('날짜 문자열', 포맷)

문자열을 날짜로 바꿔 준다. 포맷에는 우리가 넣은 문자열의 형식을 설명해 주는 것이다.

TO_DATE의 경우 년월일의 형식은 알아서 인지를 하는데 시분초는 못 알아 먹기 때문에 우리가 어떤 형식으로 사용한 건지 알려줘야 한다.

SELECT TO_DATE('2112@11!15 15$12*11', 'YYYY-MM-DD HH24%MI^sS') FROM DUAL

이따구로 사용해도 형식만 맞으면 특수문자는 어떻게 쓰든 상관없이 잘 출력된다.


어차피 출력될 때에는 우리가 DBMS에 지정한 날짜 포맷을 따라서 출력되기 때문에

특수문자는 뭘 쓰든 포맷의 형식만 지키면 상관없다. 

대신 특수문자가 들어갈 곳에 두 번 쓴다거나 예약 특수문자를 쓰거나 그런 건 오류가 난다.


TO_TIMESTAMP라는 것도 있는 출력 결과를 밀리초까지 출력만 해줄 뿐 사용법은 같다.

얘는 밀리초까지의 형식을 자체적으로 인지할 수 있어서 입력값을 밀리초 까지 사용해도 포맷을 따로 지정할 필요가 없다.




4. TO_NUMBER('문자열')

문자열을 숫자로 바꿔 준다.