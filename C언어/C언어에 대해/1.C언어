

C언어


C언어도 결국은 사람이 만든 프로그램이다.

기계어를 사람이 편하게 볼 수 있게 만들고 우리가 자주 사용하는 기능들을

함수로서 미리 구현해 놓아 쉽게 접근할 수 있게 만들어준 것이 언어라고 볼 수 있다.


1. include <stdio.h>를 쓰는 이유

include는 <>에 적힌 파일을 현재 파일에 불러와 포함하겠다는 뜻이다.

<>안에 들어가는 파일들은 보통 헤더파일로 

헤더파일들은 함수들이 정의되어 있는 코드 파일이라고도 할 수 있다.

꼭 함수만 있는 건 아니지만 보통 함수가 많이 정의돼 있다.

stdio.h는 c언어에서 자체적으로 제공하는 헤더파일이다.

표준입출력에 관한 함수를 포함하고 있다.


<> 와 " "의 차이

< > : 컴파일러가 미리 정해놓은 위치에서 헤더파일을 찾습니다.

" " : 컴파일러가 미리 정해놓은 위치에서 헤더파일을 찾고 만약 찾지 못한다면, < >로 바꾸어 헤더파일을 찾습니다.




2. int main()


모든 프로그램에는 main이라는 함수가 존재한다.

어떤 프로그램을 켰을 때 가장 컴퓨터가 가장 먼저 어떤 행위를 해야할 지를 이 메인 함수에서 정할 수 있다.

컴퓨터는 어떤 프로그램이든지 main 함수를 찾은 후 그곳에 적혀진대로 프로그램을 실행한다. 

이후에는 main 함수에서 어떻게 해야 하는지를 순차적으로 다 알려주게 된다.


결론 

main 함수는 프로그램 작성시 기능(함수)들을 수행하기 위한 처음 시작점이다.

모든 프로그램은 하나의 시작점만을 가지고 있기 때문에, main 함수는 언제나 항상 하나의 프로그램내에서는 1개여야만 한다.

main 함수가 1개라는 말은 2개도 3개도 될 수 없지만, 0개도 될 수 없다는 말이다. 0개라면 프로그램은 시작점을 찾을 수 없다.


c언어에서 main을 보면 int main()의{~~~ return 0} 형태를 갖고 있는데 여기서 ()는 main이 함수라는 것을 의미하고

int는 이 함수의 출력값이 어떤 자료형인 지를 나타내는 것이다. {}는 알다시피 함수가 정의되는 부분이고.

return 0은 함수가 진행되고 나서 반환되는 값을 정희해야 하는데 그냥 0을 출력하겠다는 뜻이다.

int 자료형을 반환해야 하기 때문에 0을 넣어준 것이다. 함수 내에서 일어나는 일과는 상관 없이

함수가 끝나고 반한되는 값을 필요하니까. 하지만 사실 명시적인 것일 뿐이다.

하지만 개발자간의 편의를 위해 쓰는 습관을 들이자.


근데 이름만 main이라고 한 일반 함수인 거 아니에요? 다른 함수들 보다 가장 위에 있으니까 먼저 실행되는 거 아님?!

main을 sex로 바꿔도 잘 실행될 것 같은데? 라고 생각했었는데 찾아 보니까 아님ㅋㅋ 

진짜 처음으로 시작시키는 main이라는 함수가 있는 거였음. 다른 이름으로 하면 오류남

이게 보니까 컴파일 과정에서 이름이 main인 함수를 찾아서 실행시키는 과정이 포함돼 있는 것 같더라고.




3. void


int main(void)에서 void는 뭘까?

void 존재하지 않는다 라는 뜻으로 볼 수 있다.

void 함수 같은 경우는 리턴값이 존재하지 않는 함수 라는 뜻이고 함수(void)는

함수가 받는 인자가 없다는 뜻이다.

c언어와 c++에서 조금 다른데 c언어에서 함수의 ()안에 아무 것도 넣지 않으면

받는 인자의 수를 알 수 없다는 뜻이고 c++에서는 void를 넣은 것과 같은

받는 인자가 아무 것도 없다는 뜻이다.

void mat(){}
void main(void){

    mat(10,"something",123);
    return 0;
}

위 와 같은 경우를 예시로 들면 c언어 에서는 문제 없이 작동된다.

mat함수를 보면 ()에 아무 것도 없는데 c언어 에서는 받는 인자 수 알 수 없음이기 때문에

밑에 main 함수에서 mat함수에 인자를 막 써도 문제가 없다.

그러나 c++ 에서는 ()에 아무 것도 쓰지 않으면 void를 쓴 것과 같은 효과이기 때문에

mat함수에 인자가 들어가 있을 수 없다.



void mat(void){}
void main(void){

    mat(10,"something");
    return 0;
}

위는 c언어에서도 오류가 날 것이다.