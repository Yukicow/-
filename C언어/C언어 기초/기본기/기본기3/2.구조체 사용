






1. 구조체를 배열처럼 사용하기


구조체는 저장한 변수의 정보들이 배열처럼 순서를 갖는다.

예시를 보자

struct Character{

    char* Cha1.name;
    int Cha1.hp;
    int Cha1.mp;

}

이렇게 캐릭터 구조체에 3개의 변수가 저장되어 있다고 하면

이 3개의 변수는 위에서 아래로 순서를 가진다.

그래서 구조체를 만들 때 배열처럼 변수에 값을 넣을 수 있는데

struct Character Cha1 = {"코미클",100,100};

이렇게 선언할 수도 있다. 이런 식으로 배열처럼 선언을 하면

Cha1.name 에는 "코미클"이라는 값이

Cha1.hp 와 Cha1.mp 에는 각각 100이라는 값이 저장된다.


이걸 이용해서 구조체를 배열로 이용할 수도 있다.

두 개의 구조체를 만들려고 한다면

struct Character Cha[2] = {{"코미클",100,100},{"야미클",50,50}};

Cha배열에 대해 2개의 구조체가 생긴 것이다.

값에 접근할 때에는 Cha[1].name 이런 식으로 접근할 수 있다.




2. 포인터와 구조체


포인터를 이용한 구조체사용은 딱히 대단한 건 없다.

그냥 말 그대로 구조체에 대한 메모리 주소를 포인터 변수로 지정하고

사용하는 게 전부이다.

다른 변수들을 포인터로 사용하는 것과 다를 게 없다.

하지만 조금 사용법이 특이하니 알아 보도록 하자.


예시)

struct Character Cha1;

struct Character* cha_ptr = &Cha1;


이 때 cha_ptr을 이용해서 Cha1의 값에 접근할 때에는

(*cha_ptr).name , (*cha_ptr).hp, (*cha_ptr).mp의 형태로 사용한다.

cha_ptr에 *를 사용해서 구조체에 접근하고 

그 중에서 원하는 정보를 불러온다는 느낌으로 생각하면 될 것 같다.

이 방법 말고도 한 가지 방식이 더 있는데

->를 이용하는 방법이다.

cha_ptr->name 이렇게 사용하면 (*cha_ptr).name 과 똑같이 작동한다.


포인터를 이용해서 구조체 안에 구조체를 넣을 수도 있다.

struct Character{

    char *name;
    int hp;
    int mp;
    struct Character* character_ptr;
};

struct Character Cha1;
Cha1.name = "코미클";
Cha1.hp = 100;
Cha1.mp = 100;


struct Character Cha2;
Cha2.character_ptr =  &Cha1;


사실 포인터를 제대로 이해했다면 포인터 변수를 하나 만들고

다른 구조체의 주소를 가리키게 만든 게 전부라는 걸 알 수 있다.

위에 배운 ->를 이용해서 변수에 접근할 수 있다.

예시)

printf("%s", Cha2.character_ptr->name);