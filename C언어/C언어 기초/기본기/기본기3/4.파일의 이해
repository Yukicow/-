




1. 파일


우리 컴퓨터(시스템)는 모니터,키보드,마우스 등등 하드웨어의 존재에 대해 모른다. 모든 것을 파일로 이해한다.

그래서 시스템과 하드웨어 사이에 input output을 연결해 주는 역할을 하는 것이 드라이버이다.

그리고 이러한 정보를 주고 받는 것은 모두 file(파일)에 의해 이루어 진다.

시스템은 실제로 하드웨어에게 어떠한 출력을 원할 때 하드웨어에 직접 하는 게 아니고

드라이버에 출력을 하면 드라이버가 하드웨어에 접근하는 역할을 한다. 반대도 마찬가지이다.

그렇기 때문에 우리가 프로그램을 만들어서 하드웨어를 다룬다는 것은 사실 드라이버를 통한다는 것이다.

드라이버 하드웨어와 시스템을 연결하는 프로그램이고 이 파일을 연다는 의미는

하드웨어에 접근하기 위해 드라이버를 열겠다는 뜻이기도 하다.


c언어에서는 이 모든 과정이 눈에 보이지 않지만 일어나고 있다.

예를 들어 보면 standard input과 standard output은 각각 키보드와 모니터를 의미한다. 

우리가 printf()함수를 통해 값을 출력하면 자동으로 모니터에 출력되도록 c언어에 되어 있다.

c언어 내부적으로 모니터에 대한 드라이버(파일)를 열고 그 안에 출력하면 드라이버는 모니터에게 그 출력을 전달하는 것이다.


파일 입출력은 이런 출력에 대한 드라이버를 우리가 직접 지정하는 것이다.

그래서 파일을 다루기 때문에 앞에 f라는 말이 붙는 것이다.

기본적으로 표준입출력에 데이터를 출력해 주는 것과는 대조된다고 볼 수 있다. 

밑에 예시를 통해 이해해 보자.



입력 함수         파일 입력 함수

getchar    <==>     fgetc 

gets       <==>     fgets

scanf      <==>     fscanf



출력 함수와        파일 출력 함수

putchar    <==>      fputc

puts       <==>      fputs

printf     <==>      fprintf



우리가 #include <stdio.h>를 통해 표준입출력에 대한 함수들을 받아 온다.

그래서 그 안에 있는 함수들은 입출력에 관한 함수들이 기본적으로 키보드와 모니터에서

이루어지도록 되어있는 것이다.

하지만 우리가 c언어를 #include <stdio.h>를 사용하지 않고 그냥 쓴다면

저런 파일 입출력 함수를 통해 직접 어떤 드라이버(파일)을 열고 입출력 할 것인 지를 지정해야 하는 것이다.

파일은 무조건 어떤 드라이버일 필요는 없다. 우리가 접근하고자 하는 파일의 형식에 맞추면 된다.

만약 어떤 문자열을 텍스트 파일에 저장하고 싶다면 열고자 하는 파일에 그 텍스트 파일의 형식을 지켜서 적어주면 되는 것이다.


이제 앞으로 배울 파일 입출력에 대해 조금 더 쉽게 이해할 수 있을 것이다.

파일 입출력이라는 것은 원래 우리가 가장 먼저 배워야 할 것이지만 우리는 쉽게

표준 입출력에 대한 함수로 c언어를 접근하게 된다.

파일 입출력은 조금 더 시스템에 대한 근본을 건드리는 것이라고 생각하면 될 것 같다.