


1. if 조건문

if() 조건문은 ()안에 조건을 넣어 명령어를 실행하게 한다

else if()는 '위의 조건이 아니고 이 조건이면' 이라는 뜻이다.

else는 위의 조건 외에 모든 것에 대해 명령어를 실행한다.




2. switch문

swtich는 조건으로 값을 받는다. 값이 일치할 때에 대해 명령어를 실행하는 조건문이다.

쉽게 생각하면 if조건문의 조건이 무조건 "==" 인 경우라고 볼 수 있다

switch문에서 if문의 else와 같은 역할을 하는 것은 default이다.

예시)

int a = 1;

switch(a)
{
    case 0: printf("0"); break;
    case 1: printf("1"); break;
    default: printf("something"); break;
}

switch문은 모든 조건 명령어 다음에 break;를 걸어야 한다.

switch문은 어떤 조건 명령이 실행되면 그 다음에 있는 것들에 대해서는

조건에 상관 없이 모두 수행하기 때문이다.

이 걸 이용해서 약간 if문과 비슷한 효과를 낼 수도 있기는 한데. 밑에 예시를 보자

ex)

int a = 15;

switch(a)
{
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5: printf("유아입니다"); break;
    case 6:
    case 7: printf("어린이입니다"); break;
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13: printf("초등학생입니다"); break;
}

이런 식으로 if문에서 <,> 를 이용한 듯한 효과를 낼 수 있다.




3. and(&&) 와 or(||)

and는 어떤 두 조건에 대해 모두 성립할 때

or는 두 조건 중 하나만 맞아도 명령어를 실행한다.

조건은 최대 두 가지 밖에 안되며 여러 조건을 썼는데 실행이 된다?

그거는 조건이 결합된 것일 확률이 높다.

조건의 결합은 좌에서 우로 이루어진다.

ex)

if( a == b or b == c or c == d)가 있을 때

이는 좌의 a == b 와 b == c의 조건이 하나로 합쳐진

((a == b or b == c) or c == d)의 형태로 인식한다.




4. continue;와 break;

break;는 반복문을 탈출하는 명령어이다.

continue;는 반복문을 이어서 '다시' 실행하는 것이다.

'다시'라는 말은 continue;의 밑에 있는 명령문들은 실행하지 않는 다는 것이다.

만약 어떤 조건 후에 continue;를 사용하면 밑에 다른 명령문과 상관 없이 다시 반복문이 실행된다.

보통 break와 continue는 어떤 조건문의 후에 쓰이는 경우가 많아서 같이 정리하였다.

