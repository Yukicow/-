


OS(운영체제)와 커널


os는 이용자에게 인터페이스를 제공하고 하드웨어의 명령 수행과 데이터 전송을 관리해 주는 프로그램이다.

커널은 소프트웨어와 하드웨어 간의 데이터 관리를 위한 인터페이스의 역할을 하는 프로그램이다

초창기 컴퓨터 운영체제에서 커널은 필수적인 것이 아니었다. 

사용자가 작성한 프로그램 명령을 하드웨어에서 곧바로 수행할 수 있었다. 

하지만 프로그램이 복잡해지고 하드웨어가 다양해지면서 운영체제가 탄생하게 되었고, 

운영체제를 거쳐 사용자의 명령을 하드웨어에 전달하게 되었다.

커널이 만들어진 이유는 좀 여러 가지가 있겠는데 아주 종합적인 이유 때문이다.

위에서 말한 것 처럼 cpu는 하나의 프로세스만 실행할 수 있다.

그리고 초창기의 컴퓨터들은 이유는 잘 모르겠는데 다른 프로세스를 실행하기 위해서는

컴퓨터를 껐다가 켜서 다시 입력 자료를 받아들여야 하는 형식이었다.

# 옛날에는 메모리가 워낙 부족해서 한 개 프로그램 실행하면 끄고 다른 걸 실행할 여유도 없던 게 아닐까..

# 껏다 켜서 메모리 공간을 다시 확보하는 것이지.


예를 들어 너가 노래를 듣다가 메모를 하려고 메모장을 켜야 하는데 다시 컴퓨터를 껏다 켜서 메모장을 이용하고

그 다음 또 다시 컴퓨터를 껏다 켜서 노래를 틀어야 한다면 얼마나 불편할까.


그리고 원래 메모리에 저장된 데이터들은 컴퓨터가 종료될 때 까지 남게 된다.

이런 귀찮은 과정도 없애고 메모리가 불필요하게 소모되는 것도 막고 

프로그램을 좀 더 쉽게 실행할 수 있도록 커널이라는 것이 나타났다. 

시스템 자원 관리도 하고 cpu가 여러 프로세스를 동시에 실행하는 것처럼 작용할 수 있게

스케줄링을 통해 실행도 하고 인터페이스도 제공하고 아주 개꿀딱따구리한 녀석인다.

한 마디로 컴퓨터에서 실행되는 모든 프로그램에 대해 제어를 할 수 있게 해 주는 인터페이스라고 보면 된다.


커널은 확실히 컴퓨터 소프트웨어적인 면에서 도움이 많이 된다. 

그러나 이런 어려운 걸 일반인이 이용할 수 있을까..

os는 저런 소프트웨어와 하드웨어 간에 인터페이스를 제공하는 커널을 이용해

사용자를 위해 만든 하드웨어와 사용자 간의 인터페이스 같은 것이라고 볼 수 있다.


결국 os라는 것은 커널로 구성돼 있으며 더 뭔가 편리한 기능을 추가하여 만든 

좀 더 일반인을 위한 컴퓨터 인터페이스 프로그램이라고 보면 된다.

운영체제는 같은 커널을 가지고도 다른 형태로 제작할 수 있다.


