


객체 지향 언어


객체 지향 프로그래밍이란 컴퓨터 프로그램을 명령어의 목록으로 보는 시각에서 벗어나

여러개의 독립된 단위, 객체들의 모임으로 파악하고자 하는 것이다.

각각의 객체별로



1. 캡슐화

캡슐화는 한 캡슐에 개념적으로 이어진 것들을 모아 넣는다는 개념과 비슷해.

클래스의 원리인 거지. 필요한 것들을 하나로 묶어 정의할 수 있는 거야.

데이터와 해당 데이터를 이용하는 함수 등을 잘 정리하는 방법론이지.



2. 상속

공통되는 내용에 대해 불필요하게 코드를 낭비하지 않고 상속을 통해

원래 있던 객체의 특성을 물려받을 수 있도록 하는 것.



3. 추상화

추상화는 필요한 부분은 드러내고 불피요한 부분은 드러내지 않도록 해주는 것이다.

예를 들면 우리는 어떤 객체가 어떤 식으로 구성되어 있는 지는 알 수 없지만

그 객체의 함수 등을 자유롭게 이용할 수 있다. 이렇게 인터페이스를 제공하고 

어떤 원리로 인터페이스가 돌아가는 지에 대해서는 숨기는 것도 추상화의 하나라고 할 수 있다.



4. 다형성

다형성은 '재구성의 가능.' 이라는 느낌으로 받아들이면 좋아.

객체에 대해 내가 필요한 부분을 재구성할 수 있는데. 이게 다형성이야.

예를 들면 오버라이딩과 오버로딩이 있겠네.




