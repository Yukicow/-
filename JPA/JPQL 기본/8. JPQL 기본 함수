






데이터 베이스의 기본 함수들처럼 JPQL도 여러 함수를 제공한다.

아래의 기본 함수들은 JPQL에서 제공하는 함수들이기 때문에 DB에 종속적이지 않다.


CONCAT : 문자열을 합쳐주는 함수


SUBSTRING : 문자열을 자르는 함수


TRIM : 공백같은 걸 제거하듯이 문자열을 다듬는 함수


LOWER, UPPER : 대소문자로 만들어 주는 함수


LENGTH : 문자의 길이를 출력하는 함수


LOCATE : 문자열에서 특정 문자열이 몇 번째 위치에 존재하는 지 출력되는

(index로 출력하는 게 아니고 순서로 출력)


ABS,SQRT,MOD : 수학과 관련된 함수들


SIZE(JPA 전용) : @OneToMany나 양방향 연관관계에서 컬렉션의 size를 출력하는 함수

"SELECT size(t.members) FROM Team t" 형태로 사용 가능


INDEX(JPA 전용) : 값타입 컬렉션 등에서 @OrderColumn을 사용했을 때 컬렉션의 인덱스를 구하는 함수이다.

애초에 값타입 컬렉션은 웬만하면 사용하지 않는 게 좋기 때문에 쓸 일은 거의 없다.





위와 같은 기본 함수 말고, 데이터 베이스에 종속적인 함수들도 있다.

하지만 JPQL에서는 그것을 알지 못하기 때문에 Dialect에 등록해서 사용해야 한다.

기본적으로 제공하는 Dialect에 이미 거의 다 등록되어 있지만 그것 말고도 등록해야할 것들이 있다면 

기본 DB Dialect를 상속받고 등록한 뒤 persistence.xml에 우리가 구현한 클래스로 바꿔 주면 되는데, 

이 때 함수를 등록하는 방법은 기존의 Dialect 로직을 직접 참고해서 넣으면 될 듯 하다. 아니면 구글링


사용자 정의한 함수를 사용하는 방법은 function('함수 이름', 컬럼) 형태로 사용하면 된다.

"SELECT function('group_concat', m.name) FROM Member" 이렇게 사용할 수 있다.
