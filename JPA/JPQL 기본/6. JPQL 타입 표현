





JPQL에서 타입을 어떤 식으로 표현하는 지 알아 보자.


1. 문자

''를 사용, 문자에 '가 들어가야 할 경우 '를 두 번 사용

ex) 'She''s name is comi'



2. 숫자 

숫자 뒤에 데이터 타입을 명시하는 형태로 작성한다.

ex) 10L(Long), 10D(Double), 10F(Float)



3. Boolean 

TRUE, FALSE



4. ENUM 

패키지명을 포함한 ENUM클래스 + ENUM객체까지 적는다.

Order라는 Entity에 delivery라는 ENUM타입의 필드를 가지고 있고 조회를 하고 싶다면

패키지명이 hello.jpa ENUM 타입이 Delivery이고 객체로 FAST, NORMAL, SLOW가 있다면

"SELECT o FROM Order o WHERE o.delivery = hello.jpa.Delivery.FAST" 이런 식으로 조회할 수 있다.

query 객체를 통해 메소드로 parameter를 setting하는 형태를 이용할 경우 인자로 ENUM값을 넘기기만 하면 알아서 주입된다.

"SELECT o FROM Order o WHERE o.delivery = :delivery"

query.setParameter("delivery", Delivery.FAST)

이렇게 사용하면 된다.



5. 상속 관계 Entity

상속 관계에서 부모타입으로 조회할 때, 특정 자식 Entity에 대한 데이터에 대해서만 조회하고 싶을 때 사용가능한 type()이 있다.

type()의 안에 조회하는 Entity를 넣고, '=' 연산자로 특정 자식 타입 클래스 이름을 넣어 주면 된다.

예를 들어 Item이라는 부모 클래스를 Book, Movie가 상속받고 있을 때 Item으로 조회하되 Book에 대한 내용만 조회하고 싶다면

"SELECT i FROM Item i WHERE type(i) == Book"의 형태로 사용할 수 있다.

쉽게 생각하면 DTYPE을 이용해 WHERE 조건을 사용하는 걸 더 간편하게 해 주는 것이라고 볼 수 있다.

"SELECT i FROM Item i WHERE DTYPE == Book"과 같다고 할 수 있다.

DTYPE으로 조회하려면, DTYPE에 대한 컬럼 이름과 해당 자식 Entity의 DiscriminatorValue값을 알고 있어야 하는데,

이 type 문법을 사용하면 이러한 과정을 공통된 방식으로 추상적으로 해결할 수 있다.



