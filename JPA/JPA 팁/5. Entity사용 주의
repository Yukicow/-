







1. @Transactional이 없어도 조회는 가능하다.

@Transactional이 없어도 EntityManager를 통해 데이터 조회는 가능하다.

다만 조회를 제외한 수정, 삽입, 삭제 등은 모두 트랜잭션 내에서 일어나야 하기 때문에 @Transactional이 필요하다.

@Transactional이 없을 때 Entity를 조회하면 영속성 컨텍스트가 어떻게 관리하는 지 한 번 실험해 보자.

과연 @Transactional이 없으면 바로 준영속 상태로 관리하는 지 아니면 영속상태로 관리하는 지..

근데 아무리 봐도 준영속 상태로 관리하는 게 상식적일듯




2. 어설프게 Controller에서 Entity를 생성하지 말자.

Controller에서 Form객체등으로 받은 데이터를 통해 Entity를 생성해서 service단으로 넘기는 방법 보다는

필요한 데이터만 인자로 보내는 형태로 만드는 것이 유지보수가 더 용이하다.

만약 인자로 보낼 데이터가 너무 많다면 Entity를 생성해서 보내지 말고 Dto를 만드는 방식을 고려하는 게 좋다.




3. Transaction이 없는 곳에서 사용된 Entity

트랜잭션의 범위 밖에서 Entity를 사용하는 경우 Entity는 이미 준영속 상태가 되어 버린다.

그래서 조회된 곳에서 다른 곳으로 Entity를 넘겨 사용하는 경우 영속 상태가 아니기 때문에 의도한 대로 동작하지 않을 수가 있다.

또 반대로 Transaction내에서 사용된 Entity를 다른 곳에 반환하더라도 Transaction이 끝난 곳이라면

영속성 컨텍스트에서 벗어난 상태이기 때문이다.


사실 JPA중급편의 OSIV의 내용을 이해했다면, OSIV가 true일 경우에는 @Transaction 내에서 사용된 Entity가 다른 곳에 반환되어도

영속성 컨텍스트는 유지되기 때문에 문제 없이 사용이 가능하다.

