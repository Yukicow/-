






우리는 기본적으로 변경 감지(Dirty Checking)을 통해서 Entity의 값을 변경하고 DB에 반영되도록 하고 있다.

이렇게 되면 기존의 Entity를 통해서 DB의 데이터를 변경시키려면 무조건 한 번 Entity를 DB로부터 가져오는 과정이 필요하다.

하지만 이런 방식 말고도 Entity를 수정하는 방법이 있다.

바로 Merge이다.


사실 Merge는 위에서 말한 방식처럼 한 번 Entity를 조회하고 조회된 Entity의 필드를 우리가 인자로 넘긴 값으로 병합시키는 방식이라서

우리가 직접 Entity를 find로 조회하고 변경하는 것과 거의 동작은 다르지 않다.

하지만 Merge에는 조심해야 할 내용이 두 가지 있다.


첫 번째는 merge()메소드를 수행하면 인자로 넘긴 Entity가 영속성 컨텍스트에 담기는 게 아니라는 것이다.

인자로 넘긴 Entity는 그저 조회되어 영속성 컨텍스트에 담겨 있는 진짜 Entity의 값을 변경하기 위한 용도로 사용되는 것이다.

merge()메소드 호출 후에 반환되는 값이 있는데, 그게 진짜 영속성 컨텍스트에 담긴 Entity이기 때문에

만약 merge를 사용하고 더 Entity를 쓸 일이 있다면 반환값을 이용해야 한다.


두 번째는 merge방식은 인자로 넘긴 Entity의 모든 값을 다 실제 Entity에 반영해 버린다는 것이다.

우리가 원하지 않는 값도 다 반영이 되어버리기 때문에 사용에 조심해야 한다.


결론은 merge는 아예 사용을 안 한다고 생각하면 된다.

사실상 동작은 크게 다르지 않은데, 위험성이 존재하고 제약사항이 있기 때문에

사실상 직접 변경감지를 통해서 Entity를 변경하는 것이 제일 좋다.

merge는 아예 없다고 생각하자.