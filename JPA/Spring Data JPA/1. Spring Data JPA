





Spring Data JPA는 JPA의 기술을 이용해서 JPA를 사용하면 발생하는 반복되는 코드를 줄여 주기 위한 편리 기술이다.

메소드의 이름을 통해 정적 쿼리를 자동 생성하고 구현체를 자동 생성해 주입해 줌으로써

간단한 형태의 정적 쿼리를 이용한 JPA 메소드들은 개발자의 불편스러운 코드 작성 없이 바로 사용 가능하도록 한다.


Spring Data JPA에서 제공하는 인터페이스를 상속 받는 인터페이스를 만들면 

Spring Data JPA는 그에 대한 구현체를 자동 생성하고 주입해 주는데 

이 때, 어떤 패키지 경로에 해당 인터페이스들이 있는 지 우리가 명시를 해야 한다.

@EnableJpaRepository 어노테이션을 사용할 수도 있고, 설정 파일을 통해 명시도 가능하다.

하지만 스프링 부트를 사용할 경우 자동으로 main method가 있는 클래스의 패키지를 기준으로 

하위는 패키지를 모두 자동 스캔하고 등록하기 때문에 따로 설정이 필요 없다.


그럼 이렇게 명시된 패키지의 하위에서 Spring Data JPA 인터페이스를 상속한 인터페이스를 자동 구현한다.

이 구현체는 @Repository를 갖기 때문에 자동 등록하는 것은 물론 JPA예외를 Spring 예외로 처리하는 일도 함께 한다.

따라서 @Repository가 없다고 해서 예외처리를 따로 해 주어야 하나? 고민하지 않아도 된다.



